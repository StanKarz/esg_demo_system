{"ast":null,"code":"import _toConsumableArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nimport objectAssign from \"object-assign\";\nvar Iframe = function Iframe(_ref) {\n  var url = _ref.url,\n    allowFullScreen = _ref.allowFullScreen,\n    position = _ref.position,\n    display = _ref.display,\n    height = _ref.height,\n    width = _ref.width,\n    overflow = _ref.overflow,\n    styles = _ref.styles,\n    onLoad = _ref.onLoad,\n    onMouseOver = _ref.onMouseOver,\n    onMouseOut = _ref.onMouseOut,\n    scrolling = _ref.scrolling,\n    id = _ref.id,\n    frameBorder = _ref.frameBorder,\n    ariaHidden = _ref.ariaHidden,\n    sandbox = _ref.sandbox,\n    allow = _ref.allow,\n    className = _ref.className,\n    title = _ref.title,\n    ariaLabel = _ref.ariaLabel,\n    ariaLabelledby = _ref.ariaLabelledby,\n    name = _ref.name,\n    target = _ref.target,\n    loading = _ref.loading,\n    importance = _ref.importance,\n    referrerpolicy = _ref.referrerpolicy,\n    allowpaymentrequest = _ref.allowpaymentrequest,\n    src = _ref.src,\n    key = _ref.key;\n  var defaultProps = objectAssign({\n    src: src || url,\n    target: target || null,\n    style: {\n      position: position || null,\n      display: display || \"initial\",\n      overflow: overflow || null\n    },\n    scrolling: scrolling || null,\n    allowpaymentrequest: allowpaymentrequest || null,\n    importance: importance || null,\n    sandbox: sandbox && _toConsumableArray(sandbox).join(\" \") || null,\n    loading: loading || null,\n    styles: styles || null,\n    name: name || null,\n    className: className || null,\n    allowFullScreen: \"allowFullScreen\" || null,\n    referrerpolicy: referrerpolicy || null,\n    title: title || null,\n    allow: allow || null,\n    id: id || null,\n    \"aria-labelledby\": ariaLabelledby || null,\n    \"aria-hidden\": ariaHidden || null,\n    \"aria-label\": ariaLabel || null,\n    width: width || null,\n    height: height || null,\n    onLoad: onLoad || null,\n    onMouseOver: onMouseOver || null,\n    onMouseOut: onMouseOut || null,\n    key: key || \"iframe\"\n  });\n  var props = Object.create(null);\n  for (var _i = 0, _Object$keys = Object.keys(defaultProps); _i < _Object$keys.length; _i++) {\n    var prop = _Object$keys[_i];\n    if (defaultProps[prop] != null) {\n      props[prop] = defaultProps[prop];\n    }\n  }\n  for (var _i2 = 0, _Object$keys2 = Object.keys(props.style); _i2 < _Object$keys2.length; _i2++) {\n    var i = _Object$keys2[_i2];\n    if (props.style[i] == null) {\n      delete props.style[i];\n    }\n  }\n  if (props.styles) {\n    for (var _i3 = 0, _Object$keys3 = Object.keys(props.styles); _i3 < _Object$keys3.length; _i3++) {\n      var _key = _Object$keys3[_i3];\n      if (props.styles.hasOwnProperty(_key)) {\n        props.style[_key] = props.styles[_key];\n      }\n      if (Object.keys(props.styles).pop() == _key) {\n        delete props.styles;\n      }\n    }\n  }\n  if (allowFullScreen) {\n    if (\"allow\" in props) {\n      var currentAllow = props.allow.replace(\"fullscreen\", \"\");\n      props.allow = \"fullscreen \".concat(currentAllow.trim()).trim();\n    } else {\n      props.allow = \"fullscreen\";\n    }\n  }\n  if (frameBorder >= 0) {\n    if (!props.style.hasOwnProperty(\"border\")) {\n      props.style.border = frameBorder;\n    }\n  }\n  return React.createElement(\"iframe\", Object.assign({}, props));\n};\nexport default Iframe;","map":null,"metadata":{},"sourceType":"module"}