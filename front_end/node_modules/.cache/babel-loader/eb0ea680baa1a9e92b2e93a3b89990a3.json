{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomDropdown = _ref => {\n  _s();\n  let {\n    options,\n    onChange\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    const newSelectedOptions = selectedOptions.includes(option) ? selectedOptions.filter(opt => opt !== option) : [...selectedOptions, option];\n    setSelectedOptions(newSelectedOptions);\n    onChange(newSelectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      style: {\n        width: '150px'\n      },\n      children: \"Industries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        width: '150px',\n        position: 'absolute'\n      },\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleOptionClick(option),\n        style: {\n          padding: '10px',\n          backgroundColor: selectedOptions.includes(option) ? 'lightblue' : 'white',\n          cursor: 'pointer'\n        },\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomDropdown, \"tJ22/v69UzQHdy+7Z3XcYkTwcIQ=\");\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomDropdown","_ref","_s","options","onChange","isOpen","setIsOpen","selectedOptions","setSelectedOptions","toggleDropdown","handleOptionClick","option","newSelectedOptions","includes","filter","opt","children","onClick","style","width","fileName","_jsxFileName","lineNumber","columnNumber","border","position","map","padding","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CustomDropdown = ({ options, onChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = (option) => {\n    const newSelectedOptions = selectedOptions.includes(option)\n      ? selectedOptions.filter((opt) => opt !== option)\n      : [...selectedOptions, option];\n\n    setSelectedOptions(newSelectedOptions);\n    onChange(newSelectedOptions);\n  };\n\n  return (\n    <div>\n      <button onClick={toggleDropdown} style={{ width: '150px' }}>\n        Industries\n      </button>\n      {isOpen && (\n        <div\n          style={{\n            border: '1px solid #ccc',\n            width: '150px',\n            position: 'absolute',\n          }}\n        >\n          {options.map((option) => (\n            <div\n              key={option}\n              onClick={() => handleOptionClick(option)}\n              style={{\n                padding: '10px',\n                backgroundColor: selectedOptions.includes(option)\n                  ? 'lightblue'\n                  : 'white',\n                cursor: 'pointer',\n              }}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC3C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BH,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,kBAAkB,GAAGL,eAAe,CAACM,QAAQ,CAACF,MAAM,CAAC,GACvDJ,eAAe,CAACO,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,MAAM,CAAC,GAC/C,CAAC,GAAGJ,eAAe,EAAEI,MAAM,CAAC;IAEhCH,kBAAkB,CAACI,kBAAkB,CAAC;IACtCR,QAAQ,CAACQ,kBAAkB,CAAC;EAC9B,CAAC;EAED,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAER,cAAe;MAACS,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAH,QAAA,EAAC;IAE5D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlB,MAAM,iBACLN,OAAA;MACEmB,KAAK,EAAE;QACLM,MAAM,EAAE,gBAAgB;QACxBL,KAAK,EAAE,OAAO;QACdM,QAAQ,EAAE;MACZ,CAAE;MAAAT,QAAA,EAEDb,OAAO,CAACuB,GAAG,CAAEf,MAAM,iBAClBZ,OAAA;QAEEkB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACC,MAAM,CAAE;QACzCO,KAAK,EAAE;UACLS,OAAO,EAAE,MAAM;UACfC,eAAe,EAAErB,eAAe,CAACM,QAAQ,CAACF,MAAM,CAAC,GAC7C,WAAW,GACX,OAAO;UACXkB,MAAM,EAAE;QACV,CAAE;QAAAb,QAAA,EAEDL;MAAM,GAVFA,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAjDIF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}