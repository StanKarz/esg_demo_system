{"ast":null,"code":"import _slicedToArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\nvar WordCloud = function WordCloud(_ref) {\n  var filepath = _ref.filepath,\n    category = _ref.category;\n  var ref = useRef();\n  var _useState = useState('environmental'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCategory = _useState2[0],\n    setSelectedCategory = _useState2[1];\n  var getColorScale = function getColorScale(category) {\n    switch (category) {\n      case \"environmental\":\n        return d3.interpolateGreens;\n      case \"social\":\n        return d3.interpolateOranges;\n      case \"governance\":\n        return d3.interpolateBlues;\n      default:\n        return d3.interpolateBlues;\n    }\n  };\n  useEffect(function () {\n    if (!filepath) {\n      return;\n    }\n    fetch(\"http://localhost:3000/word-cloud/\".concat(btoa(filepath), \"/\").concat(category)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.error) {\n        console.error(data.error);\n        return;\n      }\n      var words = Object.entries(data).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          word = _ref3[0],\n          frequency = _ref3[1];\n        return {\n          word: word,\n          frequency: frequency\n        };\n      });\n      var width = 1000;\n      var height = 720;\n      var colorInterpolate = getColorScale(selectedCategory);\n      var color = function color(d) {\n        return colorInterpolate(d.frequency / d3.max(words, function (d) {\n          return d.frequency;\n        }) * 0.7 + 0.35);\n      };\n      var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, function (d) {\n        return d.frequency;\n      })]).range([10, 100]);\n      var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(function () {\n        return Math.round(Math.random()) * 90;\n      }).font(\"Impact\").fontSize(function (d) {\n        return fontSize(d.frequency);\n      }).on(\"end\", draw);\n      function draw(words) {\n        d3.select(ref.current).html(\"\").append(\"svg\").attr(\"width\", layout.size()[0]).attr(\"height\", layout.size()[1]).append(\"g\").attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\").selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", function (d) {\n          return d.size + \"px\";\n        }).style(\"font-family\", \"Impact\").style(\"fill\", color).attr(\"text-anchor\", \"middle\").attr(\"transform\", function (d) {\n          return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n        }).text(function (d) {\n          return d.word;\n        });\n      }\n      layout.start();\n    });\n  }, [filepath, selectedCategory]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedCategory,\n    onChange: function onChange(e) {\n      return setSelectedCategory(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"environmental\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Environmental Words\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"social\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Social Words\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"governance\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Governance Words\")), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\nexport default WordCloud;","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","d3Cloud","WordCloud","_ref","filepath","category","ref","_useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","getColorScale","interpolateGreens","interpolateOranges","interpolateBlues","fetch","concat","btoa","then","response","json","data","error","console","words","Object","entries","map","_ref2","_ref3","word","frequency","width","height","colorInterpolate","color","d","max","fontSize","scalePow","exponent","domain","range","layout","size","padding","rotate","Math","round","random","font","on","draw","select","current","html","append","attr","selectAll","enter","style","x","y","text","start","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\n\n\nconst WordCloud = ({ filepath, category }) => {\n    const ref = useRef();\n    const [selectedCategory, setSelectedCategory] = useState('environmental');\n\n    const getColorScale = (category) => {\n        switch (category) {\n            case \"environmental\":\n                return d3.interpolateGreens;\n            case \"social\":\n                return d3.interpolateOranges;\n            case \"governance\":\n                return d3.interpolateBlues;\n            default:\n                return d3.interpolateBlues;\n        }\n    }\n\n    useEffect(() => {\n        if (!filepath) {\n            return;\n        }\n        fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/${category}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n                console.error(data.error);\n                return;\n            }\n\n            const words = Object.entries(data).map(([word, frequency]) => ({word, frequency}));\n\n            var width = 1000;\n            var height = 720;\n            var colorInterpolate = getColorScale(selectedCategory);\n            var color = d => colorInterpolate((d.frequency / d3.max(words, d => d.frequency)) * 0.7 + 0.35);\n\n            var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, d => d.frequency)]).range([10,100]);\n            var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(() => Math.round(Math.random()) * 90).font(\"Impact\").fontSize(d => fontSize(d.frequency)).on(\"end\", draw);\n\n            function draw(words) {\n                d3.select(ref.current).html(\"\").append(\"svg\")\n                .attr(\"width\", layout.size()[0])\n                .attr(\"height\", layout.size()[1])\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n                .selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", d => d.size + \"px\")\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", color)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", d => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\")\n                .text(d => d.word);\n            }\n            layout.start();\n        });\n    }, [filepath, selectedCategory]);\n\n    return (\n        <div>\n            <select value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)}>\n                <option value=\"environmental\">Environmental Words</option>\n                <option value=\"social\">Social Words</option>\n                <option value=\"governance\">Governance Words</option>\n            </select>\n            <div ref={ref}>\n                {/* This is where your word cloud will be rendered */}\n            </div>\n        </div>\n    );\n};\n\nexport default WordCloud;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}