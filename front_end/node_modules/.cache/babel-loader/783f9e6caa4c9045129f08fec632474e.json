{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeVisualisation() {\n  _s();\n  const {\n    filename: filenameFromParams\n  } = useParams();\n  const ref = useRef(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log(\"Filename from params: \", filenameFromParams);\n    drawTree(filenameFromParams);\n  }, [filenameFromParams]);\n  const drawTree = filename => {\n    let i = 0;\n    let duration = 800;\n    let root;\n    const svgContainer = d3.select(ref.current);\n    svgContainer.selectAll(\"*\").remove();\n    const zoom = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", function (event) {\n      svg.attr(\"transform\", event.transform);\n    });\n    const svg = svgContainer.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", \"-100 -20 2000 1000\").attr(\"preserveAspectRatio\", \"xMidYMid meet\").call(zoom).append(\"g\");\n    const treemap = d3.tree().size([900, 800]).separation(function (a, b) {\n      return 1;\n    });\n    function centerTree() {\n      const nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function (d) {\n        const bbox = d.getBBox();\n        const matrix = d.getCTM();\n        return matrix ? [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width] : [0, 0];\n      });\n      const xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n      const scale = 0.8; // You can adjust the scale as needed\n      svgContainer.transition().duration(duration).call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n    }\n    d3.json(`http://localhost:3000/processed_data/${filename}`).then(treeData => {\n      console.log(\"Received tree data: \", treeData);\n      root = d3.hierarchy(treeData, function (d) {\n        return d.children;\n      });\n      root.x0 = window.innerHeight / 2;\n      root.y0 = window.innerWidth / 10;\n      root.children.forEach(collapse);\n      update(root);\n      centerTree();\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error occurred while fetching and processing data: \", error);\n      setLoading(false);\n    });\n    const collapse = d => {\n      if (d.children) {\n        d._children = d.children;\n        d._children.forEach(collapse);\n        d.children = null;\n      }\n    };\n    const update = source => {\n      const treeData = treemap(root);\n      const nodes = treeData.descendants();\n      const links = treeData.descendants().slice(1);\n      nodes.forEach(function (d) {\n        d.y = d.depth * 1250;\n      });\n      const node = svg.selectAll('g.node').data(nodes, function (d) {\n        return d.id || (d.id = ++i);\n      });\n      const nodeEnter = node.enter().append('g').attr('class', 'node').attr(\"transform\", function (d) {\n        return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n      }).on('click', (event, d) => click(d));\n      nodeEnter.append('circle').attr('class', 'node').attr('r', 1e-4).style(\"fill\", function (d) {\n        return d._children ? \"lightsteelblue\" : \"#fff\";\n      });\n      nodeEnter.append('text').attr(\"dy\", \" -1em\") // Shifts the text vertically so it's centered on the node\n      .attr(\"x\", 0) // Centers the text horizontally on the node\n      .style(\"text-anchor\", \"middle\") // Ensures the text is centered at its position\n      .text(function (d) {\n        return d.data.name;\n      });\n      const nodeUpdate = nodeEnter.merge(node);\n      nodeUpdate.transition().duration(duration).attr(\"transform\", function (d) {\n        return \"translate(\" + d.y + \",\" + d.x + \")\";\n      });\n      nodeUpdate.select('circle.node').attr('r', 15).style(\"fill\", function (d) {\n        if (d._children) {\n          return \"lightsteelblue\";\n        } else if (d.children) {\n          return \"green\";\n        } else {\n          return \"#fff\";\n        }\n      }).attr('cursor', 'pointer');\n      const nodeExit = node.exit().transition().duration(duration).attr(\"transform\", function (d) {\n        return \"translate(\" + source.y + \",\" + source.x + \")\";\n      }).remove();\n      nodeExit.select('circle').attr('r', 1e-5);\n      nodeExit.select('text').style('fill-opacity', 1e-5);\n      const link = svg.selectAll('path.link').data(links, function (d) {\n        return d.id;\n      });\n      const linkEnter = link.enter().insert('path', \"g\").attr(\"class\", \"link\").attr('d', function (d) {\n        var o = {\n          x: source.x0,\n          y: source.y0\n        };\n        return diagonal(o, o);\n      });\n      const linkUpdate = linkEnter.merge(link);\n      linkUpdate.transition().duration(duration).attr('d', function (d) {\n        return diagonal(d, d.parent);\n      });\n      const linkExit = link.exit().transition().duration(duration).attr('d', function (d) {\n        var o = {\n          x: source.x,\n          y: source.y\n        };\n        return diagonal(o, o);\n      }).remove();\n      nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n      function click(d) {\n        let nodeToFocus;\n\n        // If the clicked node is the root\n        if (d.depth === 0) {\n          if (d.children) {\n            // If the root node has children\n            collapseAll(d); // Collapse all children\n          } else if (d._children) {\n            // If the root node has collapsed children\n            d.children = d._children; // Expand the root node\n            d._children = null;\n          }\n          nodeToFocus = d; // Set the root node as the node to focus\n        } else {\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n            nodeToFocus = d.parent;\n          } else {\n            d.children = d._children;\n            d._children = null;\n            nodeToFocus = d;\n          }\n        }\n        update(nodeToFocus); // Update with the node to focus\n        centerNode(nodeToFocus); // Center the node to focus\n      }\n\n      // This function will recursively collapse all children of a node\n      function collapseAll(node) {\n        if (node.children) {\n          node.children.forEach(collapseAll); // Call this function for each child\n          node._children = node.children;\n          node.children = null;\n        }\n      }\n      function centerNode(source) {\n        let scale = 0.8;\n        let x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n        let y = -source.x * scale + 300;\n        svgContainer.transition().duration(duration).ease(d3.easeCubic).call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n      }\n      function diagonal(s, d) {\n        const path = `M ${s.y} ${s.x}\n              C ${(s.y + d.y) / 2} ${s.x},\n                ${(s.y + d.y) / 2} ${d.x},\n                ${d.y} ${d.x}`;\n        return path;\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualisation\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `svg-container ${loading ? 'hidden' : ''}`,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeVisualisation, \"3W3TyaZgdmIUhv3aSZw2poHCCPg=\", false, function () {\n  return [useParams];\n});\n_c = TreeVisualisation;\nexport default TreeVisualisation;\nvar _c;\n$RefreshReg$(_c, \"TreeVisualisation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","useParams","jsxDEV","_jsxDEV","TreeVisualisation","_s","filename","filenameFromParams","ref","loading","setLoading","console","log","drawTree","i","duration","root","svgContainer","select","current","selectAll","remove","zoom","scaleExtent","on","event","svg","attr","transform","append","call","treemap","tree","size","separation","a","b","centerTree","nodesExtent","extent","nodes","d","bbox","getBBox","matrix","getCTM","e","x","width","xOffset","scale","transition","zoomIdentity","translate","json","then","treeData","hierarchy","children","x0","window","innerHeight","y0","innerWidth","forEach","collapse","update","catch","error","_children","source","descendants","links","slice","y","depth","node","data","id","nodeEnter","enter","click","style","text","name","nodeUpdate","merge","nodeExit","exit","link","linkEnter","insert","o","diagonal","linkUpdate","parent","linkExit","nodeToFocus","collapseAll","centerNode","ease","easeCubic","s","path","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\n\nfunction TreeVisualisation() {\n  const { filename: filenameFromParams } = useParams();\n  const ref = useRef(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n      console.log(\"Filename from params: \", filenameFromParams);\n      drawTree(filenameFromParams);\n  }, [filenameFromParams]);\n\n  const drawTree = (filename) => {\n      let i = 0;\n      let duration = 800;\n      let root;\n\n  const svgContainer = d3.select(ref.current)\n\n  svgContainer.selectAll(\"*\").remove();\n  \n  const zoom = d3.zoom()\n      .scaleExtent([0.5, 10])\n      .on(\"zoom\", function (event){\n          svg.attr(\"transform\", event.transform)\n      });\n\n  const svg = svgContainer.append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n      .attr(\"viewBox\", \"-100 -20 2000 1000\")\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      .call(zoom)\n      .append(\"g\");\n\n      const treemap = d3.tree().size([900, 800])\n      .separation(function(a, b) {\n          return 1\n      });\n\n      function centerTree() {\n          const nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function(d) {\n              const bbox = d.getBBox();\n              const matrix = d.getCTM();\n              return matrix ? [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width]: [0,0];\n          });\n      \n          const xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n          const scale = 0.8; // You can adjust the scale as needed\n          svgContainer.transition()\n              .duration(duration)\n              .call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n      }\n\n  d3.json(`http://localhost:3000/processed_data/${filename}`)\n    .then((treeData) => { \n      console.log(\"Received tree data: \", treeData);\n      root = d3.hierarchy(treeData, function(d) { return d.children; });\n      root.x0 = window.innerHeight / 2;\n      root.y0 = window.innerWidth / 10;\n      root.children.forEach(collapse);\n      update(root);\n      centerTree();\n      setLoading(false);\n    })\n    .catch(error => {\n      console.error(\"Error occurred while fetching and processing data: \", error);\n      setLoading(false);\n    });\n\n    const collapse = (d) => {\n      if(d.children) {\n        d._children = d.children;\n        d._children.forEach(collapse);\n        d.children = null;\n      }\n    }\n\n    const update = (source) => {\n      const treeData = treemap(root);\n      const nodes = treeData.descendants();\n      const links = treeData.descendants().slice(1);\n      nodes.forEach(function(d){ d.y = d.depth * 1250});\n      const node = svg.selectAll('g.node')\n          .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n      const nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n        })\n        .on('click', (event, d) => click(d));\n\n      nodeEnter.append('circle')\n          .attr('class', 'node')\n          .attr('r', 1e-4)\n          .style(\"fill\", function(d) {\n              return d._children ? \"lightsteelblue\" : \"#fff\";\n          });\n\n      nodeEnter.append('text')\n      .attr(\"dy\", \" -1em\") // Shifts the text vertically so it's centered on the node\n      .attr(\"x\", 0) // Centers the text horizontally on the node\n      .style(\"text-anchor\", \"middle\") // Ensures the text is centered at its position\n      .text(function(d) { return d.data.name; });\n      const nodeUpdate = nodeEnter.merge(node);\n\n      nodeUpdate.transition()\n        .duration(duration)\n        .attr(\"transform\", function(d) { \n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n         });\n\n      nodeUpdate.select('circle.node')\n        .attr('r', 15)\n        .style(\"fill\", function(d) {\n            if (d._children) {\n              return \"lightsteelblue\";\n            } else if (d.children) {\n              return \"green\";\n            } else {\n              return \"#fff\";\n            }\n        })\n        .attr('cursor', 'pointer');\n\n      const nodeExit = node.exit().transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n      nodeExit.select('circle')\n        .attr('r', 1e-5);\n\n      nodeExit.select('text')\n        .style('fill-opacity', 1e-5);\n\n      const link = svg.selectAll('path.link')\n          .data(links, function(d) { return d.id; });\n\n      const linkEnter = link.enter().insert('path', \"g\")\n          .attr(\"class\", \"link\")\n          .attr('d', function(d){\n            var o = {x: source.x0, y: source.y0}\n            return diagonal(o, o)\n          });\n\n      const linkUpdate = linkEnter.merge(link);\n\n      linkUpdate.transition()\n          .duration(duration)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n      const linkExit = link.exit().transition()\n          .duration(duration)\n          .attr('d', function(d) {\n            var o = {x: source.x, y: source.y}\n            return diagonal(o, o)\n          })\n          .remove();\n\n      nodes.forEach(function(d){\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n\n      function click(d) {\n          let nodeToFocus;\n          \n          // If the clicked node is the root\n          if (d.depth === 0) {\n            if (d.children) { // If the root node has children\n              collapseAll(d); // Collapse all children\n            } else if (d._children) { // If the root node has collapsed children\n              d.children = d._children; // Expand the root node\n              d._children = null;\n            }\n            nodeToFocus = d; // Set the root node as the node to focus\n          } else {\n            if (d.children) {\n              d._children = d.children;\n              d.children = null;\n              nodeToFocus = d.parent;\n            } else {\n              d.children = d._children;\n              d._children = null;\n              nodeToFocus = d;\n            }\n          }\n        \n          update(nodeToFocus); // Update with the node to focus\n          centerNode(nodeToFocus); // Center the node to focus\n        }\n        \n        // This function will recursively collapse all children of a node\n        function collapseAll(node) {\n          if (node.children) {\n            node.children.forEach(collapseAll); // Call this function for each child\n            node._children = node.children; \n            node.children = null; \n          }\n        }\n        \n      function centerNode(source){\n              let scale = 0.8;\n              let x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n              let y = -source.x * scale + 300;\n              svgContainer.transition()\n                  .duration(duration)\n                  .ease(d3.easeCubic)\n                  .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n      }\n      \n      function diagonal(s, d) {\n\n        const path = `M ${s.y} ${s.x}\n              C ${(s.y + d.y) / 2} ${s.x},\n                ${(s.y + d.y) / 2} ${d.x},\n                ${d.y} ${d.x}`\n\n        return path\n      }\n    }\n  }\n\n  return (\n    <div className=\"visualisation\">\n      {loading ?\n      <div>Loading...</div> : null}\n      <div className={`svg-container ${loading ? 'hidden' : ''}`} ref={ref}></div>\n    </div>\n  );\n}\n\nexport default TreeVisualisation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}