{"ast":null,"code":"import _slicedToArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\nfunction TreeVisualisation() {\n  var _useParams = useParams(),\n    filenameFromParams = _useParams.filename;\n  var ref = useRef(null);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    d3.json(\"http://localhost:3000/processed_data/\".concat(filenameFromParams)).then(function (treeData) {\n      setData(treeData);\n    }).catch(function (error) {\n      console.error(\"Error occurred while fetching and processing data: \", error);\n    });\n  }, [filenameFromParams]);\n\n  // Call drawTree whenever data changes\n  useEffect(function () {\n    if (data !== null) {\n      drawTree(data);\n    }\n  }, [data]);\n  var svgContainer = d3.select(ref.current).attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"overflow\", \"hidden\");\n  var zoom = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", function (event) {\n    svg.attr(\"transform\", event.transform);\n  });\n  var svg = svgContainer.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", \"-100 -20 2000 1000\").attr(\"preserveAspectRatio\", \"xMidYMid meet\").call(zoom).append(\"g\");\n\n  // const svgWidth = ref.current.getBoundingClientRect().width;\n  // const svgHeight = ref.current.getBoundingClientRect().height;\n  // const treemap = d3.tree().size([svgHeight, svgWidth]);\n  var treemap = d3.tree().size([900, 800]); // increased size\n\n  // function centerTree() {\n  //     svgContainer.transition()\n  //         .duration(duration)\n  //         .call(zoom.transform, d3.zoomIdentity.translate(prevTranslation[0], prevTranslation[1]).scale(prevZoomScale));\n  // }\n\n  function centerTree() {\n    var nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function (d) {\n      var bbox = d.getBBox();\n      var matrix = d.getCTM();\n      return [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width];\n    });\n    var xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n    var scale = 0.8; // You can adjust the scale as needed\n    svgContainer.transition().duration(duration).call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n  }\n  d3.json(\"http://localhost:3000/processed_data/\".concat(filename)).then(function (treeData) {\n    root = d3.hierarchy(treeData, function (d) {\n      return d.children;\n    });\n    root.x0 = 375;\n    root.y0 = 375;\n    root.children.forEach(collapse);\n    update(root);\n    centerTree();\n  }).catch(function (error) {\n    console.error(\"Error occurred while fetching and processing data: \", error);\n  });\n  var collapse = function collapse(d) {\n    if (d.children) {\n      d._children = d.children;\n      d._children.forEach(collapse);\n      d.children = null;\n    }\n  };\n  var update = function update(source) {\n    var treeData = treemap(root);\n    var nodes = treeData.descendants();\n    var links = treeData.descendants().slice(1);\n    nodes.forEach(function (d) {\n      d.y = d.depth * 1200;\n    });\n    var node = svg.selectAll('g.node').data(nodes, function (d) {\n      return d.id || (d.id = ++i);\n    });\n    var nodeEnter = node.enter().append('g').attr('class', 'node').attr(\"transform\", function (d) {\n      return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n    }).on('click', function (event, d) {\n      return click(d);\n    });\n    var nodeUpdate = nodeEnter.merge(node);\n    nodeEnter.append('circle').attr('class', 'node').attr('r', 1e-4).style(\"fill\", function (d) {\n      return d._children ? \"lightsteelblue\" : \"#fff\";\n    });\n    nodeEnter.append('text').attr(\"dy\", \"1.5em\").attr(\"x\", function (d) {\n      return d.children || d._children ? 13 : -13;\n    }).attr(\"text-anchor\", function (d) {\n      return d.children || d._children ? \"start\" : \"end\";\n    }).text(function (d) {\n      return d.data.name;\n    });\n    nodeUpdate.transition().duration(duration).attr(\"transform\", function (d) {\n      return \"translate(\" + d.y + \",\" + d.x + \")\";\n    });\n    nodeUpdate.select('circle.node').attr('r', 15).style(\"fill\", function (d) {\n      if (d._children) {\n        return \"lightsteelblue\";\n      } else if (d.children) {\n        return \"green\";\n      } else {\n        return \"#fff\";\n      }\n    }).attr('cursor', 'pointer');\n    var nodeExit = node.exit().transition().duration(duration).attr(\"transform\", function (d) {\n      return \"translate(\" + source.y + \",\" + source.x + \")\";\n    }).remove();\n    nodeExit.select('circle').attr('r', 1e-5);\n    nodeExit.select('text').style('fill-opacity', 1e-5);\n    var link = svg.selectAll('path.link').data(links, function (d) {\n      return d.id;\n    });\n    var linkEnter = link.enter().insert('path', \"g\").attr(\"class\", \"link\").attr('d', function (d) {\n      var o = {\n        x: source.x0,\n        y: source.y0\n      };\n      return diagonal(o, o);\n    });\n    var linkUpdate = linkEnter.merge(link);\n    linkUpdate.transition().duration(duration).attr('d', function (d) {\n      return diagonal(d, d.parent);\n    });\n    var linkExit = link.exit().transition().duration(duration).attr('d', function (d) {\n      var o = {\n        x: source.x,\n        y: source.y\n      };\n      return diagonal(o, o);\n    }).remove();\n    nodes.forEach(function (d) {\n      d.x0 = d.x;\n      d.y0 = d.y;\n    });\n    function click(d) {\n      var nodeToFocus;\n      console.log(d);\n      if (d.children) {\n        d._children = d.children;\n        d.children = null;\n        nodeToFocus = d.parent;\n        //   centerTree();\n      } else {\n        d.children = d._children;\n        d._children = null;\n        nodeToFocus = d;\n        //   centerNode(d);\n      }\n\n      update(d);\n      centerNode(nodeToFocus);\n    }\n    function centerNode(source) {\n      var scale = 0.8;\n      var x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n      var y = -source.x * scale + 300;\n      svgContainer.transition().duration(duration).call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n    }\n\n    // function centerTree() {\n    //     let scale = 0.75;  // This should be a smaller value than the scale used in `centerNode`\n    //     let x = 50;\n    //     let y = 50;\n    //     svgContainer.transition()\n    //         .duration(duration)\n    //         .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n    // }\n\n    function diagonal(s, d) {\n      var path = \"M \".concat(s.y, \" \").concat(s.x, \"\\n                C \").concat((s.y + d.y) / 2, \" \").concat(s.x, \",\\n                  \").concat((s.y + d.y) / 2, \" \").concat(d.x, \",\\n                  \").concat(d.y, \" \").concat(d.x);\n      return path;\n    }\n  };\n}\nexport default TreeVisualisation;","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","useParams","TreeVisualisation","_useParams","filenameFromParams","filename","ref","_useState","_useState2","_slicedToArray","data","setData","json","concat","then","treeData","catch","error","console","drawTree","svgContainer","select","current","attr","style","zoom","scaleExtent","on","event","svg","transform","append","call","treemap","tree","size","centerTree","nodesExtent","extent","selectAll","nodes","d","bbox","getBBox","matrix","getCTM","e","x","width","xOffset","scale","transition","duration","zoomIdentity","translate","root","hierarchy","children","x0","y0","forEach","collapse","update","_children","source","descendants","links","slice","y","depth","node","id","i","nodeEnter","enter","click","nodeUpdate","merge","text","name","nodeExit","exit","remove","link","linkEnter","insert","o","diagonal","linkUpdate","parent","linkExit","nodeToFocus","log","centerNode","s","path"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\n\nfunction TreeVisualisation() {\n    \n    const { filename: filenameFromParams } = useParams();\n    const ref = useRef(null);\n    const [data, setData] = useState(null); \n\n    useEffect(() => {\n        d3.json(`http://localhost:3000/processed_data/${filenameFromParams}`)\n            .then((treeData) => { \n                setData(treeData);\n            })\n            .catch(error => {\n                console.error(\"Error occurred while fetching and processing data: \", error);\n            });\n    }, [filenameFromParams]);\n\n     // Call drawTree whenever data changes\n     useEffect(() => {\n        if (data !== null) {\n            drawTree(data);\n        }\n    }, [data]);\n\n    const svgContainer = d3.select(ref.current)\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .style(\"overflow\", \"hidden\");\n\n    const zoom = d3.zoom()\n        .scaleExtent([0.5, 10])\n        .on(\"zoom\", function (event){\n            svg.attr(\"transform\", event.transform)\n        });\n\n    const svg = svgContainer.append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"viewBox\", \"-100 -20 2000 1000\")\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n        .call(zoom)\n        .append(\"g\");\n\n        // const svgWidth = ref.current.getBoundingClientRect().width;\n        // const svgHeight = ref.current.getBoundingClientRect().height;\n        // const treemap = d3.tree().size([svgHeight, svgWidth]);\n        const treemap = d3.tree().size([900, 800]);  // increased size\n\n        // function centerTree() {\n        //     svgContainer.transition()\n        //         .duration(duration)\n        //         .call(zoom.transform, d3.zoomIdentity.translate(prevTranslation[0], prevTranslation[1]).scale(prevZoomScale));\n        // }\n\n        function centerTree() {\n            const nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function(d) {\n                const bbox = d.getBBox();\n                const matrix = d.getCTM();\n                return [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width];\n            });\n        \n            const xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n            const scale = 0.8; // You can adjust the scale as needed\n            svgContainer.transition()\n                .duration(duration)\n                .call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n        }\n        \n\n\n\n    d3.json(`http://localhost:3000/processed_data/${filename}`)\n      .then((treeData) => { \n        root = d3.hierarchy(treeData, function(d) { return d.children; });\n        root.x0 = 375;\n        root.y0 = 375;\n        root.children.forEach(collapse);\n        update(root);\n        centerTree();\n      })\n      .catch(error => {\n        console.error(\"Error occurred while fetching and processing data: \", error);\n      });\n\n      const collapse = (d) => {\n        if(d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n\n      const update = (source) => {\n        const treeData = treemap(root);\n        const nodes = treeData.descendants();\n        const links = treeData.descendants().slice(1);\n  \n        nodes.forEach(function(d){ d.y = d.depth * 1200});\n  \n        const node = svg.selectAll('g.node')\n            .data(nodes, function(d) {return d.id || (d.id = ++i); });\n  \n        const nodeEnter = node.enter().append('g')\n            .attr('class', 'node')\n            .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on('click', (event, d) => click(d));\n\n\n        const nodeUpdate = nodeEnter.merge(node);\n\n  \n        nodeEnter.append('circle')\n            .attr('class', 'node')\n            .attr('r', 1e-4)\n            .style(\"fill\", function(d) {\n                return d._children ? \"lightsteelblue\" : \"#fff\";\n            });\n  \n        nodeEnter.append('text')\n            .attr(\"dy\", \"1.5em\")\n            .attr(\"x\", function(d) {\n                return d.children || d._children ? 13 : -13;\n            })\n            .attr(\"text-anchor\", function(d) {\n                return d.children || d._children ? \"start\" : \"end\";\n            })\n            .text(function(d) { return d.data.name; });\n  \n  \n        nodeUpdate.transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) { \n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n           });\n\n           \n  \n        nodeUpdate.select('circle.node')\n          .attr('r', 15)\n          .style(\"fill\", function(d) {\n              if (d._children) {\n                return \"lightsteelblue\";\n              } else if (d.children) {\n                return \"green\";\n              } else {\n                return \"#fff\";\n              }\n          })\n          .attr('cursor', 'pointer');\n  \n        const nodeExit = node.exit().transition()\n            .duration(duration)\n            .attr(\"transform\", function(d) {\n                return \"translate(\" + source.y + \",\" + source.x + \")\";\n            })\n            .remove();\n  \n        nodeExit.select('circle')\n          .attr('r', 1e-5);\n\n        \n  \n        nodeExit.select('text')\n          .style('fill-opacity', 1e-5);\n  \n        const link = svg.selectAll('path.link')\n            .data(links, function(d) { return d.id; });\n  \n        const linkEnter = link.enter().insert('path', \"g\")\n            .attr(\"class\", \"link\")\n            .attr('d', function(d){\n              var o = {x: source.x0, y: source.y0}\n              return diagonal(o, o)\n            });\n  \n        const linkUpdate = linkEnter.merge(link);\n  \n        linkUpdate.transition()\n            .duration(duration)\n            .attr('d', function(d){ return diagonal(d, d.parent) });\n  \n        const linkExit = link.exit().transition()\n            .duration(duration)\n            .attr('d', function(d) {\n              var o = {x: source.x, y: source.y}\n              return diagonal(o, o)\n            })\n            .remove();\n  \n        nodes.forEach(function(d){\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n  \n        function click(d) {\n        let nodeToFocus;\n        console.log(d)\n          if (d.children) {\n              d._children = d.children;\n              d.children = null;\n              nodeToFocus = d.parent;\n            //   centerTree();\n\n            } else {\n              d.children = d._children;\n              d._children = null;\n              nodeToFocus = d;\n            //   centerNode(d);\n\n            }\n          update(d);\n          centerNode(nodeToFocus);\n        }\n\n        function centerNode(source){\n                let scale = 0.8;\n                let x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n                let y = -source.x * scale + 300;\n                svgContainer.transition()\n                    .duration(duration)\n                    .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n        }\n\n        // function centerTree() {\n        //     let scale = 0.75;  // This should be a smaller value than the scale used in `centerNode`\n        //     let x = 50;\n        //     let y = 50;\n        //     svgContainer.transition()\n        //         .duration(duration)\n        //         .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n        // }\n\n     \n        \n        function diagonal(s, d) {\n  \n          const path = `M ${s.y} ${s.x}\n                C ${(s.y + d.y) / 2} ${s.x},\n                  ${(s.y + d.y) / 2} ${d.x},\n                  ${d.y} ${d.x}`\n  \n          return path\n        }\n      }\n    }\n  \n\n\n\n  \n  export default TreeVisualisation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}