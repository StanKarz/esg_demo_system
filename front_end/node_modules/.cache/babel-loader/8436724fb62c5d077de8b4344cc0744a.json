{"ast":null,"code":"import _objectSpread from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\nvar WordCloud = function WordCloud(_ref) {\n  var filepath = _ref.filepath,\n    category = _ref.category;\n  var ref = useRef();\n  var _useState = useState({\n      content: \"\",\n      visibility: false,\n      x: 0,\n      y: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    tooltip = _useState2[0],\n    setTooltip = _useState2[1];\n  var tooltipRef = useRef();\n  useEffect(function () {\n    if (!filepath) {\n      return;\n    }\n    fetch(\"http://localhost:3000/word-cloud/\".concat(btoa(filepath), \"/\").concat(category)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.error) {\n        console.error(data.error);\n        return;\n      }\n      var words = Object.entries(data).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          word = _ref3[0],\n          frequency = _ref3[1];\n        return {\n          word: word,\n          frequency: frequency\n        };\n      });\n      var width = 1000;\n      var height = 720;\n      var colorInterpolate = getColorScale(category);\n      var color = function color(d) {\n        return colorInterpolate(d.frequency / d3.max(words, function (d) {\n          return d.frequency;\n        }) * 0.7 + 0.35);\n      };\n      var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, function (d) {\n        return d.frequency;\n      })]).range([10, 100]);\n      var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(function () {\n        return Math.round(Math.random()) * 90;\n      }).font(\"Impact\").fontSize(function (d) {\n        return fontSize(d.frequency);\n      }).on(\"end\", draw);\n      function draw(words) {\n        d3.select(ref.current).html(\"\").append(\"svg\").attr(\"width\", layout.size()[0]).attr(\"height\", layout.size()[1]).append(\"g\").attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\").selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", function (d) {\n          return d.size + \"px\";\n        }).style(\"font-family\", \"Impact\").style(\"fill\", color).attr(\"text-anchor\", \"middle\").attr(\"transform\", function (d) {\n          return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n        }).text(function (d) {\n          return d.word;\n        }).on(\"mouseover\", mouseover).on(\"mouseout\", mouseout).attr(\"class\", \"word\");\n      }\n      function darkenColor(d) {\n        return d3.rgb(color(d)).darker(1);\n      }\n      function mouseover(event, d) {\n        var totalWords = d3.sum(words, function (d) {\n          return d.frequency;\n        });\n        var percentage = (d.frequency / totalWords * 100).toFixed(2);\n        d3.select(event.target).transition().duration(300).style(\"fill\", function () {\n          return darkenColor(d);\n        }).style(\"font-size\", d.size + 5 + \"px\");\n        setTooltip({\n          content: \"\".concat(d.word, \": \").concat(d.frequency, \" (\").concat(percentage, \"%)\"),\n          visibility: true,\n          x: event.clientX,\n          y: event.clientY\n        });\n      }\n      function mouseout(event, d) {\n        d3.select(event.target).transition().duration(300).style(\"font-size\", d.size + \"px\").style(\"fill\", function () {\n          return color(d);\n        });\n        setTooltip(_objectSpread({}, tooltip, {\n          visibility: false\n        }));\n      }\n      layout.start();\n    });\n  }, [filepath, category]);\n  var getColorScale = function getColorScale(category) {\n    switch (category) {\n      case \"environmental\":\n        return d3.interpolateGreens;\n      case \"social\":\n        return d3.interpolateOranges;\n      case \"governance\":\n        return d3.interpolateBlues;\n      default:\n        return d3.interpolateBlues;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), tooltip.visibility && /*#__PURE__*/React.createElement(\"div\", {\n    ref: tooltipRef,\n    style: {\n      position: \"absolute\",\n      left: tooltip.x,\n      top: tooltip.y,\n      background: \"rgba(0, 0, 0, 0.7)\",\n      color: \"#fff\",\n      padding: \"3px 8px\",\n      borderRadius: \"4px\",\n      pointerEvents: \"none\",\n      fontSize: \"14px\",\n      transform: 'translate(-50%, -100%)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, tooltip.content));\n};\nexport default WordCloud;","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","d3Cloud","WordCloud","_ref","filepath","category","ref","_useState","content","visibility","x","y","_useState2","_slicedToArray","tooltip","setTooltip","tooltipRef","fetch","concat","btoa","then","response","json","data","error","console","words","Object","entries","map","_ref2","_ref3","word","frequency","width","height","colorInterpolate","getColorScale","color","d","max","fontSize","scalePow","exponent","domain","range","layout","size","padding","rotate","Math","round","random","font","on","draw","select","current","html","append","attr","selectAll","enter","style","text","mouseover","mouseout","darkenColor","rgb","darker","event","totalWords","sum","percentage","toFixed","target","transition","duration","clientX","clientY","_objectSpread","start","interpolateGreens","interpolateOranges","interpolateBlues","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","left","top","background","borderRadius","pointerEvents","transform"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\n\nconst WordCloud = ({ filepath, category }) => {\n    const ref = useRef();\n    const [tooltip, setTooltip] = useState({content: \"\", visibility: false, x: 0, y: 0});\n    const tooltipRef = useRef();\n\n    useEffect(() => {\n        if (!filepath) {\n            return;\n        }\n        fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/${category}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n                console.error(data.error);\n                return;\n            }\n\n            const words = Object.entries(data).map(([word, frequency]) => ({ word, frequency }));\n\n            var width = 1000;\n            var height = 720;\n            var colorInterpolate = getColorScale(category);\n            var color = d => colorInterpolate((d.frequency / d3.max(words, d => d.frequency)) * 0.7 + 0.35);\n\n            var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, d => d.frequency)]).range([10, 100]);\n            var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(() => Math.round(Math.random()) * 90).font(\"Impact\").fontSize(d => fontSize(d.frequency)).on(\"end\", draw);\n\n            function draw(words) {\n                d3.select(ref.current).html(\"\").append(\"svg\")\n                    .attr(\"width\", layout.size()[0])\n                    .attr(\"height\", layout.size()[1])\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n                    .selectAll(\"text\")\n                    .data(words)\n                    .enter().append(\"text\")\n                    .style(\"font-size\", d => d.size + \"px\")\n                    .style(\"font-family\", \"Impact\")\n                    .style(\"fill\", color)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"transform\", d => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\")\n                    .text(d => d.word)\n                    .on(\"mouseover\", mouseover)\n                    .on(\"mouseout\", mouseout)\n                    .attr(\"class\", \"word\");\n            }\n\n            function darkenColor(d){\n                return d3.rgb(color(d)).darker(1);\n            }\n\n            function mouseover(event, d) {\n                const totalWords = d3.sum(words, d => d.frequency);\n                const percentage = (d.frequency / totalWords * 100).toFixed(2);\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"fill\", () => darkenColor(d))\n                    .style(\"font-size\", (d.size + 5) + \"px\");\n                setTooltip({content: `${d.word}: ${d.frequency} (${percentage}%)`, visibility: true, x: event.clientX, y: event.clientY});\n            }\n\n            function mouseout(event, d) {\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"font-size\", d.size + \"px\")\n                    .style(\"fill\", () => color(d));\n                setTooltip({...tooltip, visibility: false});\n            }\n\n            layout.start();\n        });\n    }, [filepath, category]);\n\n    const getColorScale = (category) => {\n        switch (category) {\n            case \"environmental\":\n                return d3.interpolateGreens;\n            case \"social\":\n                return d3.interpolateOranges;\n            case \"governance\":\n                return d3.interpolateBlues;\n            default:\n                return d3.interpolateBlues;\n        }\n    };\n\n    return (\n        <div>\n            <div ref={ref}></div>\n            {tooltip.visibility && \n                <div ref={tooltipRef} style={{\n                    position: \"absolute\",\n                    left: tooltip.x,\n                    top: tooltip.y,\n                    background: \"rgba(0, 0, 0, 0.7)\",\n                    color: \"#fff\",\n                    padding: \"3px 8px\",\n                    borderRadius: \"4px\",\n                    pointerEvents: \"none\",\n                    fontSize: \"14px\",\n                    transform: 'translate(-50%, -100%)'\n                }}>{tooltip.content}</div>\n            }\n        </div>\n    );\n};\n\nexport default WordCloud;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}