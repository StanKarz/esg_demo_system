{"ast":null,"code":"import _slicedToArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js\";\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport WordCloud from './WordCloud';\nfunction WordFrequency() {\n  var _useParams = useParams(),\n    filename = _useParams.filename;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFile = _useState2[0],\n    setSelectedFile = _useState2[1]; // const [fileUploaded, setFileUploaded] = useState(false); // new state variable\n  var navigate = useNavigate();\n  var handleFileChange = function handleFileChange(event) {\n    setSelectedFile(event.target.files[0]);\n  };\n  var handleFileUpload = function handleFileUpload() {\n    if (!selectedFile) {\n      alert('No file selected!');\n      return;\n    }\n    var formData = new FormData();\n    formData.append('pdf', selectedFile);\n    fetch('http://localhost:3000/upload-wordcloud', {\n      method: 'POST',\n      body: formData\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      // setFileUploaded(true); // set fileUploaded to true\n      navigate(\"/visualisations/word_frequency/\".concat(selectedFile.name));\n    }).catch(function (error) {\n      console.error('Error:', error);\n    });\n  };\n  var filepath = filename || (selectedFile ? selectedFile.name : '');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Word Frequency Visualisation\"), !filename && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".pdf\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Upload\")), filename && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WordCloud, {\n    filepath: filepath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })));\n}\nexport default WordFrequency;","map":{"version":3,"names":["React","useState","useNavigate","useParams","WordCloud","WordFrequency","_useParams","filename","_useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","navigate","handleFileChange","event","target","files","handleFileUpload","alert","formData","FormData","append","fetch","method","body","then","response","json","data","concat","name","catch","error","console","filepath","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","type","accept","onChange","onClick"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport WordCloud from './WordCloud';\n\n\nfunction WordFrequency() {\n    const { filename } = useParams();\n    const [selectedFile, setSelectedFile] = useState();\n    // const [fileUploaded, setFileUploaded] = useState(false); // new state variable\n    const navigate = useNavigate();\n\n    const handleFileChange = (event) => {\n        setSelectedFile(event.target.files[0]);\n    };\n\n    const handleFileUpload = () => {\n        if (!selectedFile) {\n            alert('No file selected!');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('pdf', selectedFile);\n\n        fetch('http://localhost:3000/upload-wordcloud', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n            // setFileUploaded(true); // set fileUploaded to true\n            navigate(`/visualisations/word_frequency/${selectedFile.name}`);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n    };\n\n    const filepath = filename || (selectedFile ? selectedFile.name : '');\n\n    return (\n        <div>\n            <h1>Word Frequency Visualisation</h1>\n            {/* Conditionally render file upload UI */}\n            {!filename && (\n                <>\n                    <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n                    <button onClick={handleFileUpload}>Upload</button>\n                </>\n            )}\n            {/* Render the WordCloud component for each category */}\n            {filename && (\n                <>\n                    {/* <WordCloud filepath={filepath} category=\"environmental\" />\n                    <WordCloud filepath={filepath} category=\"social\" />\n                    <WordCloud filepath={filepath} category=\"governance\" /> */}\n                    <WordCloud filepath={filepath} />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default WordFrequency;"],"mappings":"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"},"metadata":{},"sourceType":"module"}