{"ast":null,"code":"import _slicedToArray from \"/Users/stan/Desktop/esg_demo_system/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\nimport axios from 'axios';\nfunction FileUploadComponent() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var handleFileUpload = function handleFileUpload(file) {\n    setLoading(true); // Set loading state to true when the upload starts\n\n    var formData = new FormData();\n    formData.append('file', file);\n    axios.post('http://localhost:3000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      console.log(response.data); // Log the response from the server\n      setLoading(false); // Set loading state to false when the upload (and any subsequent processing) is done\n    }).catch(function (error) {\n      console.error(\"Error uploading file: \", error);\n      setLoading(false); // Set loading state to false if there's an error\n    });\n  };\n}\n\nfunction TreeVisualisation() {\n  var _useParams = useParams(),\n    filenameFromParams = _useParams.filename;\n  var ref = useRef(null);\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    console.log(\"Filename from params: \", filenameFromParams);\n    drawTree(filenameFromParams);\n  }, [filenameFromParams]);\n  var drawTree = function drawTree(filename) {\n    var i = 0;\n    var duration = 800;\n    var root;\n    var prevZoomScale = 0.8;\n    var prevTranslation = [100, 100];\n    var calculateDepth = function calculateDepth(node) {\n      var depth = 0;\n      if (node.children) {\n        node.children.forEach(function (child) {\n          var childDepth = calculateDepth(child);\n          epth = childDepth > depth ? childDepth : depth;\n        });\n      }\n      return depth + 1;\n    };\n    var svgContainer = d3.select(ref.current);\n    svgContainer.selectAll(\"*\").remove();\n    var zoom = d3.zoom().scaleExtent([0.5, 10]).on(\"zoom\", function (event) {\n      svg.attr(\"transform\", event.transform);\n    });\n    var svg = svgContainer.append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"viewBox\", \"-100 -20 2000 1000\").attr(\"preserveAspectRatio\", \"xMidYMid meet\").call(zoom).append(\"g\");\n    var treemap = d3.tree().size([900, 800]).separation(function (a, b) {\n      return (a.parent == b.parent ? 1 : 5) / a.depth;\n    });\n    function centerTree() {\n      var nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function (d) {\n        var bbox = d.getBBox();\n        var matrix = d.getCTM();\n        return matrix ? [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width] : [0, 0];\n      });\n      var xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n      var scale = 0.8; // You can adjust the scale as needed\n      svgContainer.transition().duration(duration).call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n    }\n    d3.json(\"http://localhost:3000/processed_data/\".concat(filename)).then(function (treeData) {\n      console.log(\"Received tree data: \", treeData);\n      root = d3.hierarchy(treeData, function (d) {\n        return d.children;\n      });\n      var totalDepth = calculateDepth(root);\n      root.x0 = window.innerHeight / 2;\n      root.y0 = window.innerWidth / 10;\n      root.children.forEach(collapse);\n      update(root);\n      centerTree();\n      setLoading(false);\n    }).catch(function (error) {\n      console.error(\"Error occurred while fetching and processing data: \", error);\n      setLoading(false);\n    });\n    var collapse = function collapse(d) {\n      if (d.children) {\n        d._children = d.children;\n        d._children.forEach(collapse);\n        d.children = null;\n      }\n    };\n    var update = function update(source) {\n      var treeData = treemap(root);\n      var nodes = treeData.descendants();\n      var links = treeData.descendants().slice(1);\n\n      // nodes.forEach(function(d){ d.y = d.depth * 1200});\n\n      var separationDistance = 1200; // Adjust this to change the default separation\n      nodes.forEach(function (d) {\n        d.y = d.depth * (window.innerWidth / totalDepth) || separationDistance;\n      });\n      var node = svg.selectAll('g.node').data(nodes, function (d) {\n        return d.id || (d.id = ++i);\n      });\n      var nodeEnter = node.enter().append('g').attr('class', 'node').attr(\"transform\", function (d) {\n        return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n      }).on('click', function (event, d) {\n        return click(d);\n      });\n      nodeEnter.append('circle').attr('class', 'node').attr('r', 1e-4).style(\"fill\", function (d) {\n        return d._children ? \"lightsteelblue\" : \"#fff\";\n      });\n      nodeEnter.append('text').attr(\"dy\", \" -1em\") // Shifts the text vertically so it's centered on the node\n      .attr(\"x\", 0) // Centers the text horizontally on the node\n      .style(\"text-anchor\", \"middle\") // Ensures the text is centered at its position\n      .text(function (d) {\n        return d.data.name;\n      });\n      var nodeUpdate = nodeEnter.merge(node);\n      nodeUpdate.transition().duration(duration).attr(\"transform\", function (d) {\n        return \"translate(\" + d.y + \",\" + d.x + \")\";\n      });\n      nodeUpdate.select('circle.node').attr('r', 15).style(\"fill\", function (d) {\n        if (d._children) {\n          return \"lightsteelblue\";\n        } else if (d.children) {\n          return \"green\";\n        } else {\n          return \"#fff\";\n        }\n      }).attr('cursor', 'pointer');\n      var nodeExit = node.exit().transition().duration(duration).attr(\"transform\", function (d) {\n        return \"translate(\" + source.y + \",\" + source.x + \")\";\n      }).remove();\n      nodeExit.select('circle').attr('r', 1e-5);\n      nodeExit.select('text').style('fill-opacity', 1e-5);\n      var link = svg.selectAll('path.link').data(links, function (d) {\n        return d.id;\n      });\n      var linkEnter = link.enter().insert('path', \"g\").attr(\"class\", \"link\").attr('d', function (d) {\n        var o = {\n          x: source.x0,\n          y: source.y0\n        };\n        return diagonal(o, o);\n      });\n      var linkUpdate = linkEnter.merge(link);\n      linkUpdate.transition().duration(duration).attr('d', function (d) {\n        return diagonal(d, d.parent);\n      });\n      var linkExit = link.exit().transition().duration(duration).attr('d', function (d) {\n        var o = {\n          x: source.x,\n          y: source.y\n        };\n        return diagonal(o, o);\n      }).remove();\n      nodes.forEach(function (d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n      function click(d) {\n        var nodeToFocus;\n\n        // If the clicked node is the root\n        if (d.depth === 0) {\n          if (d.children) {\n            // If the root node has children\n            collapseAll(d); // Collapse all children\n          } else if (d._children) {\n            // If the root node has collapsed children\n            d.children = d._children; // Expand the root node\n            d._children = null;\n          }\n          nodeToFocus = d; // Set the root node as the node to focus\n        } else {\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n            nodeToFocus = d.parent;\n          } else {\n            d.children = d._children;\n            d._children = null;\n            nodeToFocus = d;\n          }\n        }\n        update(nodeToFocus); // Update with the node to focus\n        centerNode(nodeToFocus); // Center the node to focus\n      }\n\n      // This function will recursively collapse all children of a node\n      function collapseAll(node) {\n        if (node.children) {\n          node.children.forEach(collapseAll); // Call this function for each child\n          node._children = node.children;\n          node.children = null;\n        }\n      }\n      function centerNode(source) {\n        var scale = 0.8;\n        var x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n        var y = -source.x * scale + 300;\n        svgContainer.transition().duration(duration).ease(d3.easeCubic).call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n      }\n      function diagonal(s, d) {\n        var path = \"M \".concat(s.y, \" \").concat(s.x, \"\\n                C \").concat((s.y + d.y) / 2, \" \").concat(s.x, \",\\n                  \").concat((s.y + d.y) / 2, \" \").concat(d.x, \",\\n                  \").concat(d.y, \" \").concat(d.x);\n        return path;\n      }\n    };\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"visualisation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-container \".concat(loading ? 'hidden' : ''),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }));\n}\nexport default TreeVisualisation;","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","useParams","axios","FileUploadComponent","_useState","_useState2","_slicedToArray","loading","setLoading","handleFileUpload","file","formData","FormData","append","post","headers","then","response","console","log","data","catch","error","TreeVisualisation","_useParams","filenameFromParams","filename","ref","_useState3","_useState4","drawTree","i","duration","root","prevZoomScale","prevTranslation","calculateDepth","node","depth","children","forEach","child","childDepth","epth","svgContainer","select","current","selectAll","remove","zoom","scaleExtent","on","event","svg","attr","transform","call","treemap","tree","size","separation","a","b","parent","centerTree","nodesExtent","extent","nodes","d","bbox","getBBox","matrix","getCTM","e","x","width","xOffset","scale","transition","zoomIdentity","translate","json","concat","treeData","hierarchy","totalDepth","x0","window","innerHeight","y0","innerWidth","collapse","update","_children","source","descendants","links","slice","separationDistance","y","id","nodeEnter","enter","click","style","text","name","nodeUpdate","merge","nodeExit","exit","link","linkEnter","insert","o","diagonal","linkUpdate","linkExit","nodeToFocus","collapseAll","centerNode","ease","easeCubic","s","path","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\nimport axios from 'axios';\n\nfunction FileUploadComponent() {\n    const [loading, setLoading] = useState(false);\n\n    const handleFileUpload = (file) => {\n        setLoading(true);  // Set loading state to true when the upload starts\n\n        const formData = new FormData();\n        formData.append('file', file);\n    \n        axios.post('http://localhost:3000/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        .then((response) => {\n            console.log(response.data);  // Log the response from the server\n            setLoading(false);  // Set loading state to false when the upload (and any subsequent processing) is done\n        })\n        .catch((error) => {\n            console.error(\"Error uploading file: \", error);\n            setLoading(false);  // Set loading state to false if there's an error\n        });\n    };\n}\n\nfunction TreeVisualisation() {\n    \n    const { filename: filenameFromParams } = useParams();\n    const ref = useRef(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        console.log(\"Filename from params: \", filenameFromParams);\n        drawTree(filenameFromParams);\n    }, [filenameFromParams]);\n\n    const drawTree = (filename) => {\n        let i = 0;\n        let duration = 800;\n        let root;\n        let prevZoomScale = 0.8;\n        let prevTranslation = [100, 100];\n\n    const calculateDepth = (node) => {\n        let depth = 0;\n        if (node.children) {\n            node.children.forEach((child) => {\n                const childDepth = calculateDepth(child);\n                epth = childDepth > depth ? childDepth : depth;\n            });\n        }\n        return depth + 1;\n    };\n        \n\n    const svgContainer = d3.select(ref.current)\n\n    svgContainer.selectAll(\"*\").remove();\n    \n    const zoom = d3.zoom()\n        .scaleExtent([0.5, 10])\n        .on(\"zoom\", function (event){\n            svg.attr(\"transform\", event.transform)\n        });\n\n    const svg = svgContainer.append(\"svg\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .attr(\"viewBox\", \"-100 -20 2000 1000\")\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n        .call(zoom)\n        .append(\"g\");\n\n        const treemap = d3.tree().size([900, 800])\n        .separation(function(a, b) {\n            return (a.parent == b.parent ? 1 : 5) / a.depth;\n        });\n\n        function centerTree() {\n            const nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function(d) {\n                const bbox = d.getBBox();\n                const matrix = d.getCTM();\n                return matrix ? [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width]: [0,0];\n            });\n        \n            const xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n            const scale = 0.8; // You can adjust the scale as needed\n            svgContainer.transition()\n                .duration(duration)\n                .call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n        }\n\n    d3.json(`http://localhost:3000/processed_data/${filename}`)\n      .then((treeData) => { \n        console.log(\"Received tree data: \", treeData);\n        root = d3.hierarchy(treeData, function(d) { return d.children; });\n        const totalDepth = calculateDepth(root);\n        root.x0 = window.innerHeight / 2;\n        root.y0 = window.innerWidth / 10;\n        root.children.forEach(collapse);\n        update(root);\n        centerTree();\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error occurred while fetching and processing data: \", error);\n        setLoading(false);\n      });\n\n      const collapse = (d) => {\n        if(d.children) {\n          d._children = d.children;\n          d._children.forEach(collapse);\n          d.children = null;\n        }\n      }\n\n      const update = (source) => {\n        const treeData = treemap(root);\n        const nodes = treeData.descendants();\n        const links = treeData.descendants().slice(1);\n  \n        // nodes.forEach(function(d){ d.y = d.depth * 1200});\n\n        const separationDistance = 1200; // Adjust this to change the default separation\n            nodes.forEach((d) => {\n                d.y = d.depth * (window.innerWidth / totalDepth) || separationDistance;\n            });\n\n\n\n  \n        const node = svg.selectAll('g.node')\n            .data(nodes, function(d) {return d.id || (d.id = ++i); });\n  \n        const nodeEnter = node.enter().append('g')\n            .attr('class', 'node')\n            .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on('click', (event, d) => click(d));\n\n        nodeEnter.append('circle')\n            .attr('class', 'node')\n            .attr('r', 1e-4)\n            .style(\"fill\", function(d) {\n                return d._children ? \"lightsteelblue\" : \"#fff\";\n            });\n\n        nodeEnter.append('text')\n        .attr(\"dy\", \" -1em\") // Shifts the text vertically so it's centered on the node\n        .attr(\"x\", 0) // Centers the text horizontally on the node\n        .style(\"text-anchor\", \"middle\") // Ensures the text is centered at its position\n        .text(function(d) { return d.data.name; });\n\n  \n        const nodeUpdate = nodeEnter.merge(node);\n  \n        nodeUpdate.transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) { \n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n           });\n  \n        nodeUpdate.select('circle.node')\n          .attr('r', 15)\n          .style(\"fill\", function(d) {\n              if (d._children) {\n                return \"lightsteelblue\";\n              } else if (d.children) {\n                return \"green\";\n              } else {\n                return \"#fff\";\n              }\n          })\n          .attr('cursor', 'pointer');\n  \n        const nodeExit = node.exit().transition()\n            .duration(duration)\n            .attr(\"transform\", function(d) {\n                return \"translate(\" + source.y + \",\" + source.x + \")\";\n            })\n            .remove();\n  \n        nodeExit.select('circle')\n          .attr('r', 1e-5);\n  \n        nodeExit.select('text')\n          .style('fill-opacity', 1e-5);\n  \n        const link = svg.selectAll('path.link')\n            .data(links, function(d) { return d.id; });\n  \n        const linkEnter = link.enter().insert('path', \"g\")\n            .attr(\"class\", \"link\")\n            .attr('d', function(d){\n              var o = {x: source.x0, y: source.y0}\n              return diagonal(o, o)\n            });\n  \n        const linkUpdate = linkEnter.merge(link);\n  \n        linkUpdate.transition()\n            .duration(duration)\n            .attr('d', function(d){ return diagonal(d, d.parent) });\n  \n        const linkExit = link.exit().transition()\n            .duration(duration)\n            .attr('d', function(d) {\n              var o = {x: source.x, y: source.y}\n              return diagonal(o, o)\n            })\n            .remove();\n  \n        nodes.forEach(function(d){\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n\n        function click(d) {\n            let nodeToFocus;\n            \n            // If the clicked node is the root\n            if (d.depth === 0) {\n              if (d.children) { // If the root node has children\n                collapseAll(d); // Collapse all children\n              } else if (d._children) { // If the root node has collapsed children\n                d.children = d._children; // Expand the root node\n                d._children = null;\n              }\n              nodeToFocus = d; // Set the root node as the node to focus\n            } else {\n              if (d.children) {\n                d._children = d.children;\n                d.children = null;\n                nodeToFocus = d.parent;\n              } else {\n                d.children = d._children;\n                d._children = null;\n                nodeToFocus = d;\n              }\n            }\n          \n            update(nodeToFocus); // Update with the node to focus\n            centerNode(nodeToFocus); // Center the node to focus\n          }\n          \n          // This function will recursively collapse all children of a node\n          function collapseAll(node) {\n            if (node.children) {\n              node.children.forEach(collapseAll); // Call this function for each child\n              node._children = node.children; \n              node.children = null; \n            }\n          }\n          \n        function centerNode(source){\n                let scale = 0.8;\n                let x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n                let y = -source.x * scale + 300;\n                svgContainer.transition()\n                    .duration(duration)\n                    .ease(d3.easeCubic)\n                    .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n        }\n        \n        function diagonal(s, d) {\n  \n          const path = `M ${s.y} ${s.x}\n                C ${(s.y + d.y) / 2} ${s.x},\n                  ${(s.y + d.y) / 2} ${d.x},\n                  ${d.y} ${d.x}`\n  \n          return path\n        }\n      }\n    }\n  \n    return (\n      <div className=\"visualisation\">\n        {loading ?\n        <div>Loading...</div> : null}\n        <div className={`svg-container ${loading ? 'hidden' : ''}`} ref={ref}></div>\n      </div>\n    );\n  }\n  \n  export default TreeVisualisation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}