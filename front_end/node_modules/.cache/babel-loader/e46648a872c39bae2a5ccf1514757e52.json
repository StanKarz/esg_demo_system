{"ast":null,"code":"var _jsxFileName = \"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Brush, Label } from 'recharts';\nimport Modal from 'react-modal';\nimport '../styles/sentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SentimentVis() {\n  _s();\n  const {\n    filename\n  } = useParams(); // Get filename from URL parameters\n  const [sentimentData, setSentimentData] = useState(null);\n  const [selectedSentiments, setSelectedSentiments] = useState(['compound']); // Initialize with compound sentiment only\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalText, setModalText] = useState(\"\");\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n  const sentimentColors = {\n    'compound': '#FF8133',\n    'pos': '#2E933C',\n    'neu': '#51B9F6',\n    'neg': '#FF5F5C'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:3000/sentiment-data/${filename}`);\n      const data = await response.json();\n      const transformedData = data.neg.map((value, index) => {\n        return {\n          index: index,\n          neg: data.neg[index],\n          neu: data.neu[index],\n          pos: data.pos[index],\n          compound: data.compound[index],\n          text: data.text[index] // Include the text field here\n        };\n      });\n\n      setSentimentData(transformedData);\n    };\n    fetchData();\n  }, [filename]);\n  const CustomTooltip = _ref => {\n    let {\n      active,\n      payload,\n      label\n    } = _ref;\n    if (active && payload && payload.length) {\n      const textChunk = sentimentData[label].text || ''; // assuming the text chunk is stored under 'text' key\n      const snippet = textChunk.length > 100 ? textChunk.substring(0, 100) + '...' : textChunk;\n      setHoveredIndex(label);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        style: {\n          backgroundColor: '#f4f4f4',\n          padding: '5px',\n          border: '1px solid #d4d4d4'\n        },\n        children: [payload.map((pl, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${pl.dataKey} score: ${pl.value}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Corresponding text: \", snippet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const handleReadMoreClick = index => {\n    const textChunk = sentimentData[index].text || '';\n    setModalText(textChunk);\n    setIsModalOpen(true);\n  };\n  const handleCheckboxChange = event => {\n    if (selectedSentiments.includes(event.target.value)) {\n      setSelectedSentiments(selectedSentiments.filter(sentiment => sentiment !== event.target.value));\n    } else {\n      setSelectedSentiments([...selectedSentiments, event.target.value]);\n    }\n  };\n}\n_s(SentimentVis, \"XLTjrp89twoAa17+gfZ0OEn8JgQ=\", false, function () {\n  return [useParams];\n});\n_c = SentimentVis;\nexport default SentimentVis;\nvar _c;\n$RefreshReg$(_c, \"SentimentVis\");","map":{"version":3,"names":["React","useEffect","useState","useParams","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Brush","Label","Modal","jsxDEV","_jsxDEV","SentimentVis","_s","filename","sentimentData","setSentimentData","selectedSentiments","setSelectedSentiments","isModalOpen","setIsModalOpen","modalText","setModalText","hoveredIndex","setHoveredIndex","sentimentColors","fetchData","response","fetch","data","json","transformedData","neg","map","value","index","neu","pos","compound","text","CustomTooltip","_ref","active","payload","label","length","textChunk","snippet","substring","className","style","backgroundColor","padding","border","children","pl","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","handleReadMoreClick","handleCheckboxChange","event","includes","target","filter","sentiment","_c","$RefreshReg$"],"sources":["/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Brush, Label } from 'recharts';\nimport Modal from 'react-modal';\nimport '../styles/sentiment.css';\n\nfunction SentimentVis() {\n    const { filename } = useParams(); // Get filename from URL parameters\n    const [sentimentData, setSentimentData] = useState(null);\n    const [selectedSentiments, setSelectedSentiments] = useState(['compound']); // Initialize with compound sentiment only\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalText, setModalText] = useState(\"\");\n    const [hoveredIndex, setHoveredIndex] = useState(null);\n\n    const sentimentColors = {\n        'compound': '#FF8133',\n        'pos': '#2E933C',\n        'neu': '#51B9F6',\n        'neg': '#FF5F5C'\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await fetch(`http://localhost:3000/sentiment-data/${filename}`);\n            const data = await response.json();\n\n            const transformedData = data.neg.map((value, index) => {\n                return {\n                    index: index,\n                    neg: data.neg[index],\n                    neu: data.neu[index],\n                    pos: data.pos[index],\n                    compound: data.compound[index],\n                    text: data.text[index] // Include the text field here\n                }\n            });\n\n            setSentimentData(transformedData);\n        }\n        fetchData();\n    }, [filename]); \n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            const textChunk = sentimentData[label].text || ''; // assuming the text chunk is stored under 'text' key\n            const snippet = textChunk.length > 100 ? textChunk.substring(0, 100) + '...' : textChunk;\n\n            setHoveredIndex(label);\n            \n            return (\n                <div className=\"custom-tooltip\" style={{ backgroundColor: '#f4f4f4', padding: '5px', border: '1px solid #d4d4d4' }}>\n                    {payload.map((pl, index) => \n                        <p key={index}>{`${pl.dataKey} score: ${pl.value}`}</p>\n                    )}\n                    {/* Display the snippet */}\n                    <p>Corresponding text: {snippet}</p>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    const handleReadMoreClick = (index) => {\n        const textChunk = sentimentData[index].text || '';\n        setModalText(textChunk);\n        setIsModalOpen(true);\n    };\n\n    const handleCheckboxChange = (event) => {\n        if (selectedSentiments.includes(event.target.value)) {\n            setSelectedSentiments(selectedSentiments.filter(sentiment => sentiment !== event.target.value));\n        } else {\n            setSelectedSentiments([...selectedSentiments, event.target.value]);\n        }\n    }\n\n    \n    \n\n}\n\nexport default SentimentVis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}