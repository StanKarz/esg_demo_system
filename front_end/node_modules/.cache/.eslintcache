[{"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js":"1","/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js":"2","/Users/stan/Desktop/esg_demo_system/front_end/src/App.js":"3","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js":"4","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js":"5","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js":"6","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js":"7","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js":"8","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js":"9","/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js":"10","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js":"11","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js":"12","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js":"13","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js":"14","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js":"15","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js":"16","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js":"17","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/MultiReportComparison.js":"18","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SingleReportVisualisation.js":"19"},{"size":627,"mtime":1691011823905,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1691011823907,"results":"22","hashOfConfig":"21"},{"size":928,"mtime":1691923674403,"results":"23","hashOfConfig":"21"},{"size":1987,"mtime":1691848698609,"results":"24","hashOfConfig":"21"},{"size":862,"mtime":1691848952797,"results":"25","hashOfConfig":"21"},{"size":1943,"mtime":1691936120006,"results":"26","hashOfConfig":"21"},{"size":980,"mtime":1691948634327,"results":"27","hashOfConfig":"21"},{"size":7721,"mtime":1691848720534,"results":"28","hashOfConfig":"21"},{"size":7668,"mtime":1691935580181,"results":"29","hashOfConfig":"21"},{"size":1281,"mtime":1691923613353,"results":"30","hashOfConfig":"21"},{"size":8331,"mtime":1691923563777,"results":"31","hashOfConfig":"21"},{"size":548,"mtime":1691948061058,"results":"32","hashOfConfig":"21"},{"size":404,"mtime":1691937409638,"results":"33","hashOfConfig":"21"},{"size":4576,"mtime":1691949657715,"results":"34","hashOfConfig":"21"},{"size":1366,"mtime":1687400085627,"results":"35","hashOfConfig":"21"},{"size":14001,"mtime":1691537704964,"results":"36","hashOfConfig":"21"},{"size":4608,"mtime":1691011823906,"results":"37","hashOfConfig":"21"},{"size":7261,"mtime":1691848662125,"results":"38","hashOfConfig":"21"},{"size":6486,"mtime":1691948705812,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9pr7aj",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js",[],["84","85"],"/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/App.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js",["86","87","88","89","90"],"import React, { useRef, useState } from \"react\";\nimport { CircularProgress, Box, Typography } from \"@mui/material\";\nimport SentimentVis from \"./SentimentVis\";\n\nfunction SentimentAnalysis({ filename, loading }) {\n  // const fileInput = useRef();\n  // const [loading, setLoading] = useState(false);\n  // const [data, setData] = useState(null); // processed data\n\n  // const handleUpload = async (event) => {\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append(\"pdf\", fileInput.current.files[0]);\n\n  //   setLoading(true);\n\n  //   const response = await fetch(\"http://localhost:3000/upload-sentiment\", {\n  //     method: \"POST\",\n  //     body: formData,\n  //   });\n  //   const responseData = await response.json();\n  //   console.log(responseData);\n\n  //   setLoading(false);\n  //   setData(responseData.path);\n  // };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <h1>Sentiment Analysis</h1>\n      {loading && <p>Loading...</p>}\n      {filename && <SentimentVis filename={filename} />}\n      {/* {loading ? (\n        <Box\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            zIndex: 9999,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"rgba(255,255,255,0.8)\",\n          }}\n        >\n          <Box style={{ textAlign: \"center\" }}>\n            <CircularProgress color=\"primary\" />\n            <Typography variant=\"h6\" style={{ marginTop: \"20px\" }}>\n              Processing your file...\n            </Typography>\n          </Box>\n        </Box>\n      ) : data ? (\n        <SentimentVis filename={data} />\n      ) : (\n        <form onSubmit={handleUpload}>\n          <input type=\"file\" accept=\".pdf\" ref={fileInput} required />\n          <button type=\"submit\">Upload</button>\n        </form>\n      )} */}\n    </div>\n  );\n}\n\nexport default SentimentAnalysis;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js",["91"],"/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js",["92","93"],"import React from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport \"./navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction NavbarComponent() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav>\n          <div className=\"px-3\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home\n            </Link>\n          </div>\n          <div className=\"px-3\">\n            <Link className=\"nav-link\" to=\"/companies\">\n              Companies\n            </Link>\n          </div>\n          <div className=\"px-3\">\n            <Link className=\"nav-link\" to=\"/single\">\n              Single Report Visualisation\n            </Link>\n          </div>\n          <div className=\"px-3\">\n            <Link className=\"nav-link\" to=\"/multi\">\n              Multi-report Comparison\n            </Link>\n          </div>\n\n          <div className=\"px-3\">\n            <Link className=\"nav-link\" to=\"/topic-taxonomy\">\n              Topic taxonomy\n            </Link>\n          </div>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavbarComponent;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js",["94"],"import React, { useState, useEffect } from \"react\";\nimport { Card, Button, Alert, Accordion, Form } from \"react-bootstrap\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { GiCancel } from \"react-icons/gi\";\nimport \"../styles/search.css\";\n\nfunction SearchPage() {\n  const [companies, setCompanies] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [isHovering, setIsHovering] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const [selectedSectors, setSelectedSectors] = useState([]);\n  const [selectedExchanges, setSelectedExchanges] = useState([]);\n\n  useEffect(() => {\n    search();\n  }, [selectedSectors, selectedExchanges]);\n\n  function search() {\n    const sectors = selectedSectors.join(\",\");\n    const exchanges = selectedExchanges.join(\",\");\n    // Don't make a request if no sectors and no exchanges are selected\n    if (!sectors && !exchanges && !query) {\n      return;\n    }\n    return fetch(\n      `http://localhost:3000/search?query=${query}&sectors=${sectors}&exchanges=${exchanges}`\n    )\n      .then((response) => response.json())\n      .then((companies) => {\n        if (companies.length === 0) {\n          setNoResults(true);\n        } else {\n          setNoResults(false);\n        }\n        setCompanies(companies);\n      });\n  }\n\n  // Handle the form submission\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    search();\n  }\n\n  function handleSectorChange(e) {\n    const value = e.target.value;\n    setSelectedSectors((prevState) => {\n      if (prevState.includes(value)) {\n        return prevState.filter((sector) => sector !== value);\n      } else {\n        return [...prevState, value];\n      }\n    });\n  }\n\n  function handleExchangeChange(e) {\n    const value = e.target.value;\n    setSelectedExchanges((prevState) => {\n      if (prevState.includes(value)) {\n        return prevState.filter((exchange) => exchange !== value);\n      } else {\n        return [...prevState, value];\n      }\n    });\n  }\n\n  function handleClear() {\n    setQuery(\"\");\n    setCompanies([]);\n    setNoResults(false);\n  }\n\n  return (\n    <div className=\"m-4\">\n      <form onSubmit={handleFormSubmit}>\n        <div\n          className=\"filter-section\"\n          style={{ display: \"flex\", flexDirection: \"center\", gap: \"10px\" }}\n        >\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\n            <div style={{ position: \"relative\", marginRight: \"10px\", flex: 1 }}>\n              <input\n                name=\"search\"\n                type=\"text\"\n                placeholder=\"Search for companies...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                style={{\n                  width: \"100%\",\n                  paddingRight: \"30px\",\n                  borderRadius: \"4px\",\n                }}\n              />\n              <FaTimesCircle\n                style={{\n                  cursor: \"pointer\",\n                  position: \"absolute\",\n                  top: \"50%\",\n                  right: \"5px\",\n                  transform: \"translateY(-50%)\",\n                  color: isHovering ? \"black\" : \"grey\",\n                }}\n                onMouseEnter={() => setIsHovering(true)}\n                onMouseLeave={() => setIsHovering(false)}\n                onClick={handleClear}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#4C8BF5\",\n                color: \"white\",\n                border: \"none\",\n                padding: \"5px 20px\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\",\n              }}\n              onMouseEnter={(e) => (e.target.style.backgroundColor = \"#3C7CE5\")}\n              onMouseLeave={(e) => (e.target.style.backgroundColor = \"#4C8BF5\")}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </form>\n      {/* Filters Section */}\n      <Accordion defaultActiveKey=\"\" className=\"mt-3\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Filters</Accordion.Header>\n          <Accordion.Body>\n            <Form.Group controlId=\"sectors\">\n              <span className=\"filter-label\">Sectors</span>\n              <div className=\"filter-options\">\n                {[\n                  \"Technology\",\n                  \"Healthcare\",\n                  \"Services\",\n                  \"Financial\",\n                  \"Utilities\",\n                  \"Consumer Goods\",\n                  \"Real Estate\",\n                  \"Energy\",\n                ].map((sector) => (\n                  <div className=\"filter-option\" key={sector}>\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={sector}\n                      value={sector}\n                      onChange={handleSectorChange}\n                    />\n                  </div>\n                ))}\n              </div>\n            </Form.Group>\n            <Form.Group controlId=\"exchanges\">\n              <span className=\"filter-label\">Exchanges</span>\n              <div className=\"filter-options\">\n                {/* <Form.Label>Exchanges</Form.Label> */}\n                {[\n                  \"NYSE\",\n                  \"NASDAQ\",\n                  \"OTC\",\n                  \"TSX-V\",\n                  \"ASX\",\n                  \"LSE\",\n                  \"AMEX\",\n                  \"TSX\",\n                ].map((exchange) => (\n                  <div className=\"filter-option\" key={exchange}>\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={exchange}\n                      value={exchange}\n                      onChange={handleExchangeChange}\n                    />\n                  </div>\n                ))}\n              </div>\n            </Form.Group>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n\n      {/* Display the number of results */}\n      {companies.length > 0 && (\n        <p className=\"results-count\">{companies.length} result(s) found</p>\n      )}\n\n      {noResults && (\n        <Alert variant=\"danger\" className=\"margin-top\">\n          <GiCancel /> No companies found related to \"{query}\". Please try again\n          with a different query.\n        </Alert>\n      )}\n\n      {/* Render the company data. */}\n      {companies.map((company) => (\n        <Card key={company.id} className=\"mt-4\">\n          <Card.Body>\n            <Card.Title>\n              {company.company_name} ({company.ticker})\n            </Card.Title>\n            <Card.Text>{company.company_introduction}</Card.Text>\n            <p>\n              <strong>Sector:</strong> {company.sector}\n            </p>\n            <p>\n              <strong>Industry:</strong> {company.industry}\n            </p>\n            <p>\n              <strong>Exchange:</strong> {company.exchange}\n            </p>\n            <p>\n              <strong>Location:</strong> {company.company_location}\n            </p>\n\n            <link\n              rel=\"stylesheet\"\n              href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"\n            ></link>\n            <p>\n              <strong>All ESG reports:</strong>\n              <a\n                href={company.source_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"esg-link\"\n                title=\"Click to view all ESG reports\"\n              >\n                <i class=\"fas fa-external-link-alt\"></i> View Reports\n              </a>\n            </p>\n            <p>\n              <strong>Most recent ESG report:</strong>\n              <a\n                href={company.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"esg-link\"\n                title=\"Click to view the most recent ESG report\"\n              >\n                <i class=\"fas fa-file-alt\"></i> View Recent Report\n              </a>\n            </p>\n            {company.company_website && (\n              <Button\n                variant=\"primary\"\n                href={company.company_website}\n                target=\"_blank\"\n              >\n                Visit company website\n              </Button>\n            )}\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default SearchPage;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js",["95","96"],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js",["97"],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../styles/sentiment.css\";\n\nconst BubbleChart = ({ filepath }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (!filepath) {\n      return;\n    }\n\n    const categories = {\n      environmental: [\n        \"clean\",\n        \"environmental\",\n        \"epa\",\n        \"sustainability\",\n        \"climate\",\n        \"warming\",\n        \"biofuels\",\n        \"biofuel\",\n        \"green\",\n        \"renewable\",\n        \"solar\",\n        \"stewardship\",\n        \"wind\",\n        \"emission\",\n        \"emissions\",\n        \"ghg\",\n        \"ghgs\",\n        \"greenhouse\",\n        \"atmosphere\",\n        \"emit\",\n        \"agriculture\",\n        \"deforestation\",\n        \"pesticide\",\n        \"pesticides\",\n        \"wetlands\",\n        \"zoning\",\n        \"biodiversity\",\n        \"species\",\n        \"wilderness\",\n        \"wildlife\",\n        \"freshwater\",\n        \"groundwater\",\n        \"water\",\n        \"cleaner\",\n        \"cleanup\",\n        \"coal\",\n        \"contamination\",\n        \"fossil\",\n        \"resource\",\n        \"air\",\n        \"carbon\",\n        \"nitrogen\",\n        \"pollution\",\n        \"superfund\",\n        \"biphenyls\",\n        \"hazardous\",\n        \"householding\",\n        \"pollutants\",\n        \"printing\",\n        \"recycling\",\n        \"toxic\",\n        \"waste\",\n        \"wastes\",\n        \"weee\",\n        \"recycle\",\n      ],\n      social: [\n        \"citizen\",\n        \"citizens\",\n        \"csr\",\n        \"disabilities\",\n        \"disability\",\n        \"disabled\",\n        \"human\",\n        \"nations\",\n        \"social\",\n        \"un\",\n        \"veteran\",\n        \"veterans\",\n        \"vulnerable\",\n        \"children\",\n        \"epidemic\",\n        \"health\",\n        \"healthy\",\n        \"ill\",\n        \"illness\",\n        \"pandemic\",\n        \"childbirth\",\n        \"drug\",\n        \"medicaid\",\n        \"medicare\",\n        \"medicine\",\n        \"medicines\",\n        \"hiv\",\n        \"alcohol\",\n        \"drinking\",\n        \"bugs\",\n        \"conformance\",\n        \"defects\",\n        \"fda\",\n        \"inspection\",\n        \"inspections\",\n        \"minerals\",\n        \"standardization\",\n        \"warranty\",\n        \"dignity\",\n        \"discriminate\",\n        \"discriminated\",\n        \"discriminating\",\n        \"discrimination\",\n        \"equality\",\n        \"freedom\",\n        \"humanity\",\n        \"nondiscrimination\",\n        \"sexual\",\n        \"communities\",\n        \"community\",\n        \"expression\",\n        \"marriage\",\n        \"privacy\",\n        \"peace\",\n        \"bargaining\",\n        \"eeo\",\n        \"fairness\",\n        \"fla\",\n        \"harassment\",\n        \"injury\",\n        \"labor\",\n        \"overtime\",\n        \"ruggie\",\n        \"sick\",\n        \"wage\",\n        \"wages\",\n        \"workplace\",\n        \"bisexual\",\n        \"diversity\",\n        \"ethnic\",\n        \"ethnically\",\n        \"ethnicities\",\n        \"ethnicity\",\n        \"female\",\n        \"females\",\n        \"gay\",\n        \"gays\",\n        \"gender\",\n        \"genders\",\n        \"homosexual\",\n        \"immigration\",\n        \"lesbian\",\n        \"lesbians\",\n        \"lgbt\",\n        \"minorities\",\n        \"minority\",\n        \"ms\",\n        \"race\",\n        \"racial\",\n        \"religion\",\n        \"religious\",\n        \"sex\",\n        \"transgender\",\n        \"woman\",\n        \"women\",\n        \"occupational\",\n        \"safe\",\n        \"safely\",\n        \"safety\",\n        \"ilo\",\n        \"labour\",\n        \"eicc\",\n        \"endowment\",\n        \"endowments\",\n        \"people\",\n        \"philanthropic\",\n        \"philanthropy\",\n        \"socially\",\n        \"societal\",\n        \"society\",\n        \"welfare\",\n        \"charitable\",\n        \"charities\",\n        \"charity\",\n        \"donate\",\n        \"donated\",\n        \"donates\",\n        \"donating\",\n        \"donation\",\n        \"donations\",\n        \"donors\",\n        \"foundation\",\n        \"foundations\",\n        \"gift\",\n        \"gifts\",\n        \"nonprofit\",\n        \"poverty\",\n        \"courses\",\n        \"educate\",\n        \"educated\",\n        \"educates\",\n        \"educating\",\n        \"education\",\n        \"educational\",\n        \"learning\",\n        \"mentoring\",\n        \"scholarships\",\n        \"teach\",\n        \"teacher\",\n        \"teachers\",\n        \"teaching\",\n        \"training\",\n        \"employ\",\n        \"employment\",\n        \"headcount\",\n        \"hire\",\n        \"hired\",\n        \"hires\",\n        \"hiring\",\n        \"staffing\",\n        \"unemployment\",\n      ],\n      governance: [\n        \"align\",\n        \"aligned\",\n        \"aligning\",\n        \"alignment\",\n        \"aligns\",\n        \"bylaw\",\n        \"bylaws\",\n        \"charter\",\n        \"charters\",\n        \"culture\",\n        \"death\",\n        \"duly\",\n        \"parents\",\n        \"independent\",\n        \"compliance\",\n        \"conduct\",\n        \"conformity\",\n        \"governance\",\n        \"misconduct\",\n        \"parachute\",\n        \"parachutes\",\n        \"perquisites\",\n        \"plane\",\n        \"planes\",\n        \"poison\",\n        \"retirement\",\n        \"approval\",\n        \"approvals\",\n        \"approve\",\n        \"approved\",\n        \"approves\",\n        \"approving\",\n        \"assess\",\n        \"assessed\",\n        \"assesses\",\n        \"assessing\",\n        \"assessment\",\n        \"assessments\",\n        \"audit\",\n        \"audited\",\n        \"auditing\",\n        \"auditor\",\n        \"auditors\",\n        \"audits\",\n        \"control\",\n        \"controls\",\n        \"coso\",\n        \"detect\",\n        \"detected\",\n        \"detecting\",\n        \"detection\",\n        \"evaluate\",\n        \"evaluated\",\n        \"evaluates\",\n        \"evaluating\",\n        \"evaluation\",\n        \"evaluations\",\n        \"examination\",\n        \"examinations\",\n        \"examine\",\n        \"examined\",\n        \"examines\",\n        \"examining\",\n        \"irs\",\n        \"oversee\",\n        \"overseeing\",\n        \"oversees\",\n        \"oversight\",\n        \"review\",\n        \"reviewed\",\n        \"reviewing\",\n        \"reviews\",\n        \"rotation\",\n        \"test\",\n        \"tested\",\n        \"testing\",\n        \"tests\",\n        \"treadway\",\n        \"backgrounds\",\n        \"independence\",\n        \"leadership\",\n        \"nomination\",\n        \"nominations\",\n        \"nominee\",\n        \"nominees\",\n        \"perspectives\",\n        \"qualifications\",\n        \"refreshment\",\n        \"skill\",\n        \"skills\",\n        \"succession\",\n        \"tenure\",\n        \"vacancies\",\n        \"vacancy\",\n        \"appreciation\",\n        \"award\",\n        \"awarded\",\n        \"awarding\",\n        \"awards\",\n        \"bonus\",\n        \"bonuses\",\n        \"cd\",\n        \"compensate\",\n        \"compensated\",\n        \"compensates\",\n        \"compensating\",\n        \"compensation\",\n        \"eip\",\n        \"iso\",\n        \"isos\",\n        \"payout\",\n        \"payouts\",\n        \"pension\",\n        \"prsu\",\n        \"prsus\",\n        \"recoupment\",\n        \"remuneration\",\n        \"reward\",\n        \"rewarding\",\n        \"rewards\",\n        \"rsu\",\n        \"rsus\",\n        \"salaries\",\n        \"salary\",\n        \"severance\",\n        \"vest\",\n        \"vested\",\n        \"vesting\",\n        \"vests\",\n        \"ballot\",\n        \"ballots\",\n        \"cast\",\n        \"consent\",\n        \"elect\",\n        \"elected\",\n        \"electing\",\n        \"election\",\n        \"elections\",\n        \"elects\",\n        \"nominate\",\n        \"nominated\",\n        \"plurality\",\n        \"proponent\",\n        \"proponents\",\n        \"proposal\",\n        \"proposals\",\n        \"proxies\",\n        \"quorum\",\n        \"vote\",\n        \"voted\",\n        \"votes\",\n        \"voting\",\n        \"brother\",\n        \"clicking\",\n        \"conflict\",\n        \"conflicts\",\n        \"family\",\n        \"grandchildren\",\n        \"grandparent\",\n        \"grandparents\",\n        \"inform\",\n        \"insider\",\n        \"insiders\",\n        \"inspector\",\n        \"inspectors\",\n        \"interlocks\",\n        \"nephews\",\n        \"nieces\",\n        \"posting\",\n        \"relatives\",\n        \"siblings\",\n        \"sister\",\n        \"son\",\n        \"spousal\",\n        \"spouse\",\n        \"spouses\",\n        \"stepchildren\",\n        \"stepparents\",\n        \"transparency\",\n        \"transparent\",\n        \"visit\",\n        \"visiting\",\n        \"visits\",\n        \"webpage\",\n        \"website\",\n        \"attract\",\n        \"attracting\",\n        \"attracts\",\n        \"incentive\",\n        \"incentives\",\n        \"interview\",\n        \"interviews\",\n        \"motivate\",\n        \"motivated\",\n        \"motivates\",\n        \"motivating\",\n        \"motivation\",\n        \"recruit\",\n        \"recruiting\",\n        \"recruitment\",\n        \"retain\",\n        \"retainer\",\n        \"retainers\",\n        \"retaining\",\n        \"retention\",\n        \"talent\",\n        \"talented\",\n        \"talents\",\n        \"cobc\",\n        \"ethic\",\n        \"ethical\",\n        \"ethically\",\n        \"ethics\",\n        \"honesty\",\n        \"bribery\",\n        \"corrupt\",\n        \"corruption\",\n        \"crimes\",\n        \"embezzlement\",\n        \"grassroots\",\n        \"influence\",\n        \"influences\",\n        \"influencing\",\n        \"lobbied\",\n        \"lobbies\",\n        \"lobby\",\n        \"lobbying\",\n        \"lobbyist\",\n        \"lobbyists\",\n        \"whistleblower\",\n        \"announce\",\n        \"announced\",\n        \"announcement\",\n        \"announcements\",\n        \"announces\",\n        \"announcing\",\n        \"communicate\",\n        \"communicated\",\n        \"communicates\",\n        \"communicating\",\n        \"erm\",\n        \"fairly\",\n        \"integrity\",\n        \"liaison\",\n        \"presentation\",\n        \"presentations\",\n        \"sustainable\",\n        \"asc\",\n        \"disclose\",\n        \"disclosed\",\n        \"discloses\",\n        \"disclosing\",\n        \"disclosure\",\n        \"disclosures\",\n        \"fasb\",\n        \"gaap\",\n        \"objectivity\",\n        \"press\",\n        \"sarbanes\",\n        \"engagement\",\n        \"engagements\",\n        \"feedback\",\n        \"hotline\",\n        \"investor\",\n        \"invite\",\n        \"invited\",\n        \"mail\",\n        \"mailed\",\n        \"mailing\",\n        \"mailings\",\n        \"notice\",\n        \"relations\",\n        \"stakeholder\",\n        \"stakeholders\",\n        \"compact\",\n        \"ungc\",\n      ],\n    };\n\n    const currentRef = ref.current;\n\n    fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/all`)\n      .then((response) => response.json())\n      .then((rawData) => {\n        const data = Object.entries(rawData).map(([id, value]) => {\n          let category = \"\";\n          if (categories.environmental.includes(id)) category = \"environmental\";\n          if (categories.social.includes(id)) category = \"social\";\n          if (categories.governance.includes(id)) category = \"governance\";\n          return { id, value, category }; // add category\n        });\n\n        const width = 1500; // Changed from 928\n        const height = width;\n        const margin = 1;\n        const format = d3.format(\",d\");\n\n        const tooltip = d3\n          .select(\"body\")\n          .append(\"div\")\n          .style(\"position\", \"absolute\")\n          .style(\"z-index\", \"10\")\n          .style(\"visibility\", \"hidden\")\n          .style(\"background\", \"white\")\n          .style(\"border\", \"solid\")\n          .style(\"border-width\", \"1px\")\n          .style(\"border-radius\", \"5px\")\n          .style(\"padding\", \"10px\");\n\n        const getColorScale = (category) => {\n          switch (category) {\n            case \"environmental\":\n              return d3.scaleSequential(d3.interpolateGreens);\n            case \"social\":\n              return d3.scaleSequential(d3.interpolateOranges);\n            case \"governance\":\n              return d3.scaleSequential(d3.interpolateBlues);\n            default:\n              return d3.scaleSequential(d3.interpolateBlues);\n          }\n        };\n\n        const color = (d) => {\n          let scale = getColorScale(d.data.category);\n          scale.domain([0, 1]);\n\n          return scale(Math.random());\n        };\n\n        const pack = d3\n          .pack()\n          .size([width - margin * 2, height - margin * 2])\n          .padding(3);\n\n        const hierarchyData = d3\n          .hierarchy({ children: data })\n          .sum((d) => d.value);\n\n        const root = pack(hierarchyData);\n\n        const svg = d3\n          .select(ref.current)\n          .append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n          .attr(\"viewBox\", [-margin, -margin, width, height])\n          .attr(\n            \"style\",\n            \"max-width: 100%; height: auto; font: 10px sans-serif;\"\n          )\n          .attr(\"text-anchor\", \"middle\");\n\n        const node = svg\n          .append(\"g\")\n          .selectAll(\"g\")\n          .data(root.leaves())\n          .join(\"g\")\n          .attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\n\n        node\n          .append(\"circle\")\n          .attr(\"fill-opacity\", 0.7)\n          .attr(\"fill\", color)\n          .attr(\"r\", (d) => d.r)\n          .on(\"mouseover\", function (event, d) {\n            d3.select(this)\n              .transition()\n              .duration(200)\n              .attr(\"fill-opacity\", 1)\n              .attr(\"r\", d.r * 1.35); // Increase size by 20%\n\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .text(`Frequency: ${d.data.value}`)\n              .style(\"left\", `${event.pageX}px`)\n              .style(\"top\", `${event.pageY}px`);\n\n            // Add a text label for the word frequency\n            svg\n              .append(\"text\")\n              .attr(\"x\", d.x)\n              .attr(\"y\", d.y - 15)\n              .attr(\"font-size\", \"12px\")\n              .attr(\"fill\", \"#000\");\n          })\n          .on(\"mouseout\", function () {\n            d3.select(this)\n              .transition()\n              .duration(200)\n              .attr(\"fill-opacity\", 0.7)\n              .attr(\"r\", (d) => d.r); // Restore the original size\n\n            // Hide tooltip\n            tooltip.style(\"visibility\", \"hidden\");\n          });\n\n        node\n          .append(\"text\")\n          .text((d) => d.data.id)\n          .attr(\"fill\", \"#000\")\n          .style(\"font-size\", (d) => `${d.r / 3}px`);\n      });\n\n    return () => {\n      d3.select(currentRef).selectAll(\"svg\").remove();\n    };\n  }, [filepath]);\n\n  return <div ref={ref}></div>;\n};\n\nexport default BubbleChart;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/MultiReportComparison.js",["98","99"],"import React, { useState } from \"react\";\nimport ReportStructure from \"./ReportStructure\";\nimport Topics from \"./Topics\";\nimport SentimentAnalysis from \"./SentimentAnalysis\";\nimport WordFrequency from \"./WordFrequency\";\nimport axios from \"axios\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"calc(100vh - 60px)\", // change from height to minHeight\n    textAlign: \"center\",\n    backgroundColor: \"#F7F7F7\",\n    color: \"#333\",\n    padding: \"20px\",\n  },\n  heading: {\n    fontSize: \"3em\",\n    fontWeight: \"bold\",\n    marginBottom: \"20px\",\n  },\n  paragraph: {\n    fontSize: \"1.5em\",\n    marginBottom: \"20px\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: \"20px\",\n    padding: \"20px\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#FFF\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, .1)\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    gap: \"10px\",\n    margin: \"20px 0\",\n  },\n  input: {\n    padding: \"10px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\",\n    width: \"100%\", // Adjust the width of the input field\n  },\n  button: {\n    padding: \"10px 20px\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    backgroundColor: \"#3498db\",\n    color: \"white\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n    transition: \"background-color 0.2s\",\n    \":hover\": {\n      backgroundColor: \"#2980b9\",\n    },\n  },\n\n  reportContainer: {\n    flex: 1,\n    maxWidth: \"50%\", // Ensure it doesn't take more than half the space\n    margin: \"0 10px\",\n    backgroundColor: \"#FFF\",\n    borderRadius: \"5px\",\n    padding: \"20px\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, .1)\",\n  },\n\n  reportsWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"20px\",\n    width: \"100%\",\n  },\n\n  visualizationRow: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: \"20px\",\n  },\n};\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst MultiReportComparison = () => {\n  // States for the first report\n  const [file1, setFile1] = useState(null);\n  const [filenameTree1, setFilenameTree1] = useState(null);\n  const [filenameLDA1, setFilenameLDA1] = useState(null);\n  const [filenameWordcloud1, setFilenameWordcloud1] = useState(null);\n  const [data1, setData1] = useState(null);\n\n  // States for the second report\n  const [file2, setFile2] = useState(null);\n  const [filenameTree2, setFilenameTree2] = useState(null);\n  const [filenameLDA2, setFilenameLDA2] = useState(null);\n  const [filenameWordcloud2, setFilenameWordcloud2] = useState(null);\n  const [data2, setData2] = useState(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const submitForm = async (event) => {\n    event.preventDefault();\n\n    const formData1 = new FormData();\n    formData1.append(\"file\", file1);\n    const formDataPDF1 = new FormData();\n    formDataPDF1.append(\"pdf\", file1);\n\n    // Form data for the second report\n    const formData2 = new FormData();\n    formData2.append(\"file\", file2);\n    const formDataPDF2 = new FormData();\n    formDataPDF2.append(\"pdf\", file2);\n\n    setLoading(true);\n\n    try {\n      // API calls for the first report\n      const responseTree1 = await axios.post(\n        \"http://localhost:3000/upload-tree\",\n        formData1\n      );\n      setFilenameTree1(responseTree1.data.filename);\n\n      await sleep(2000);\n\n      const responseTree2 = await axios.post(\n        \"http://localhost:3000/upload-tree\",\n        formData2\n      );\n      setFilenameTree2(responseTree2.data.filename);\n\n      await sleep(1000);\n\n      const responseLda1 = await axios.post(\n        \"http://localhost:3000/upload-lda\",\n        formData1\n      );\n      setFilenameLDA1(responseLda1.data.filename.split(\".\")[0]);\n\n      const responseLda2 = await axios.post(\n        \"http://localhost:3000/upload-lda\",\n        formData2\n      );\n      setFilenameLDA2(responseLda2.data.filename.split(\".\")[0]);\n\n      await sleep(1500);\n\n      const responseSentiment1 = await axios.post(\n        \"http://localhost:3000/upload-sentiment\",\n        formDataPDF1\n      );\n      setData1(responseSentiment1.data.path);\n\n      await sleep(1500);\n\n      const responseSentiment2 = await axios.post(\n        \"http://localhost:3000/upload-sentiment\",\n        formDataPDF2\n      );\n      setData2(responseSentiment2.data.path);\n\n      await sleep(1000);\n\n      const responseWordcloud1 = await axios.post(\n        \"http://localhost:3000/upload-wordcloud\",\n        formDataPDF1\n      );\n      setFilenameWordcloud1(file1.name);\n\n      await sleep(1000);\n\n      const responseWordcloud2 = await axios.post(\n        \"http://localhost:3000/upload-wordcloud\",\n        formDataPDF2\n      );\n      setFilenameWordcloud2(file2.name);\n    } catch (error) {\n      console.error(\"There was an error: \", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.heading}>Multi-report Comparison</h1>\n      <p style={styles.paragraph}>\n        Upload your two ESG reports below to see visualizations side by side.\n      </p>\n      <form onSubmit={submitForm} style={styles.form}>\n        <input\n          type=\"file\"\n          onChange={(e) => setFile1(e.target.files[0])}\n          style={styles.input}\n        />\n        <input\n          type=\"file\"\n          onChange={(e) => setFile2(e.target.files[0])}\n          style={styles.input}\n        />\n        <button type=\"submit\" style={styles.button}>\n          Upload\n        </button>\n      </form>\n\n      <div style={styles.visualizationRow}>\n        <div style={styles.reportContainer}>\n          <h2>Report 1</h2>\n          <ReportStructure\n            style={{ maxWidth: \"100%\" }}\n            filename={filenameTree1}\n            loading={loading}\n          />\n        </div>\n        <div style={styles.reportContainer}>\n          <h2>Report 2</h2>\n          <ReportStructure\n            style={{ maxWidth: \"100%\" }}\n            filename={filenameTree2}\n            loading={loading}\n          />\n        </div>\n      </div>\n\n      <div style={styles.visualizationRow}>\n        <div style={styles.reportContainer}>\n          <Topics filename={filenameLDA1} loading={loading} />\n        </div>\n        <div style={styles.reportContainer}>\n          <Topics filename={filenameLDA2} loading={loading} />\n        </div>\n      </div>\n\n      <div style={styles.visualizationRow}>\n        <div style={styles.reportContainer}>\n          <SentimentAnalysis filename={data1} loading={loading} />\n        </div>\n        <div style={styles.reportContainer}>\n          <SentimentAnalysis filename={data2} loading={loading} />\n        </div>\n      </div>\n\n      <div style={styles.visualizationRow}>\n        <div style={styles.reportContainer}>\n          <WordFrequency filename={filenameWordcloud1} loading={loading} />\n        </div>\n        <div style={styles.reportContainer}>\n          <WordFrequency filename={filenameWordcloud2} loading={loading} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiReportComparison;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SingleReportVisualisation.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":23},{"ruleId":"104","severity":1,"message":"108","line":1,"column":25,"nodeType":"106","messageId":"107","endLine":1,"endColumn":33},{"ruleId":"104","severity":1,"message":"109","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":26},{"ruleId":"104","severity":1,"message":"110","line":2,"column":28,"nodeType":"106","messageId":"107","endLine":2,"endColumn":31},{"ruleId":"104","severity":1,"message":"111","line":2,"column":33,"nodeType":"106","messageId":"107","endLine":2,"endColumn":43},{"ruleId":"104","severity":1,"message":"112","line":200,"column":13,"nodeType":"106","messageId":"107","endLine":200,"endColumn":21},{"ruleId":"104","severity":1,"message":"113","line":2,"column":23,"nodeType":"106","messageId":"107","endLine":2,"endColumn":34},{"ruleId":"104","severity":1,"message":"114","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":17,"column":6,"nodeType":"117","endLine":17,"endColumn":42,"suggestions":"118"},{"ruleId":"104","severity":1,"message":"108","line":1,"column":36,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"115","severity":1,"message":"119","line":125,"column":6,"nodeType":"117","endLine":125,"endColumn":26,"suggestions":"120"},{"ruleId":"104","severity":1,"message":"121","line":520,"column":15,"nodeType":"106","messageId":"107","endLine":520,"endColumn":21},{"ruleId":"104","severity":1,"message":"122","line":178,"column":13,"nodeType":"106","messageId":"107","endLine":178,"endColumn":31},{"ruleId":"104","severity":1,"message":"123","line":186,"column":13,"nodeType":"106","messageId":"107","endLine":186,"endColumn":31},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CircularProgress' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'linkExit' is assigned a value but never used.","'NavDropdown' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'tooltip'. Either include it or remove the dependency array.",["127"],"'format' is assigned a value but never used.","'responseWordcloud1' is assigned a value but never used.","'responseWordcloud2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [selectedSectors, selectedExchanges, search]",{"range":"132","text":"133"},"Update the dependencies array to be: [filepath, category, tooltip]",{"range":"134","text":"135"},[639,675],"[selectedSectors, selectedExchanges, search]",[3664,3684],"[filepath, category, tooltip]"]