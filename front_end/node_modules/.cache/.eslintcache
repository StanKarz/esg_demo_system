[{"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js":"1","/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js":"2","/Users/stan/Desktop/esg_demo_system/front_end/src/App.js":"3","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Contact.js":"4","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js":"5","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js":"6","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/About.js":"7","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js":"8","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js":"9","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js":"10","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js":"11","/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js":"12","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js":"13","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js":"14","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js":"15","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js":"16","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js":"17","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js":"18","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js":"19"},{"size":627,"mtime":1689156931817,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1689156931818,"results":"22","hashOfConfig":"21"},{"size":1946,"mtime":1689747966893,"results":"23","hashOfConfig":"21"},{"size":175,"mtime":1689156931817,"results":"24","hashOfConfig":"21"},{"size":2145,"mtime":1689414865014,"results":"25","hashOfConfig":"21"},{"size":476,"mtime":1689156931818,"results":"26","hashOfConfig":"21"},{"size":171,"mtime":1689156931817,"results":"27","hashOfConfig":"21"},{"size":162,"mtime":1689156931817,"results":"28","hashOfConfig":"21"},{"size":2224,"mtime":1689156931818,"results":"29","hashOfConfig":"21"},{"size":7910,"mtime":1689420191554,"results":"30","hashOfConfig":"21"},{"size":7613,"mtime":1689601809293,"results":"31","hashOfConfig":"21"},{"size":2038,"mtime":1689748535640,"results":"32","hashOfConfig":"21"},{"size":7512,"mtime":1689156931817,"results":"33","hashOfConfig":"21"},{"size":2099,"mtime":1689156931818,"results":"34","hashOfConfig":"21"},{"size":1290,"mtime":1689156931817,"results":"35","hashOfConfig":"21"},{"size":4398,"mtime":1689156931818,"results":"36","hashOfConfig":"21"},{"size":1366,"mtime":1687400085627,"results":"37","hashOfConfig":"21"},{"size":11751,"mtime":1689665218851,"results":"38","hashOfConfig":"21"},{"size":4608,"mtime":1689750362262,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9pr7aj",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js",[],["84","85"],"/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/App.js",["86"],"import React from 'react';\nimport SearchPage from './pages/SearchPage';  \nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Navbar from './components/Navbar';\nimport ReportStructure from './pages/ReportStructure';\nimport TreeVisualisation from './pages/TreeVisualisation';\nimport WordFrequency from './pages/WordFrequency';\nimport SentimentAnalysis from './pages/SentimentAnalysis';\nimport SentimentVis from './pages/SentimentVis';\nimport Topics from './pages/Topics';\nimport TopicsVis from './pages/TopicsVis';\nimport TopicTaxonomy from './pages/TopicTaxonomy';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/contact\" element={<Contact />} />\n          <Route path=\"/companies\" element={<SearchPage />} /> \n          <Route path=\"/visualisations/report_structure\" element={<ReportStructure />} />\n          <Route path=\"/visualisations/report_structure/tree/:filename\" element={<TreeVisualisation />} /> \n          <Route path=\"/visualisations/word_frequency\" element={<WordFrequency />} />\n          <Route path=\"/visualisations/word_frequency/:filename\" element={<WordFrequency />} />\n          <Route path=\"/visualisations/sentiment_analysis\" element={<SentimentAnalysis />} />\n          <Route path=\"/visualisations/sentiment_analysis/:filename\" element={<SentimentVis />} />\n          <Route path=\"/visualisations/topics\" element={<Topics />} />\n          <Route path=\"/visualisations/topics/:fileName\" element={<TopicsVis/>} />\n          <Route path=\"/visualisations/topic_taxonomy\" element={<TopicTaxonomy/>} />\n\n          \n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Contact.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/About.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js",["87"],"import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { useParams } from 'react-router-dom';\nimport '../styles/TreeDiagram.css';\n\nfunction TreeVisualisation() {\n  const { filename: filenameFromParams } = useParams();\n  const ref = useRef(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n      console.log(\"Filename from params: \", filenameFromParams);\n      drawTree(filenameFromParams);\n  }, [filenameFromParams]);\n\n  const drawTree = (filename) => {\n      let i = 0;\n      let duration = 800;\n      let root;\n\n  const svgContainer = d3.select(ref.current)\n\n  svgContainer.selectAll(\"*\").remove();\n  \n  const zoom = d3.zoom()\n      .scaleExtent([0.5, 10])\n      .on(\"zoom\", function (event){\n          svg.attr(\"transform\", event.transform)\n      });\n\n  const svg = svgContainer.append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", \"100%\")\n      .attr(\"viewBox\", \"-100 -20 2000 1000\")\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      .call(zoom)\n      .append(\"g\");\n\n      const treemap = d3.tree().size([900, 800])\n      .separation(function(a, b) {\n          return (a.parent === b.parent ? 1 : 2) / a.depth;\n      });\n\n      function centerTree() {\n          const nodesExtent = d3.extent(svg.selectAll('.node').nodes(), function(d) {\n              const bbox = d.getBBox();\n              const matrix = d.getCTM();\n              return matrix ? [matrix.e + bbox.x, matrix.e + bbox.x + bbox.width]: [0,0];\n          });\n      \n          const xOffset = (nodesExtent[0] + nodesExtent[1]) / -2;\n          const scale = 0.8; // You can adjust the scale as needed\n          svgContainer.transition()\n              .duration(duration)\n              .call(zoom.transform, d3.zoomIdentity.translate(xOffset, 0).scale(scale));\n      }\n\n  d3.json(`http://localhost:3000/processed_data/${filename}`)\n    .then((treeData) => { \n      console.log(\"Received tree data: \", treeData);\n      root = d3.hierarchy(treeData, function(d) { return d.children; });\n      root.x0 = window.innerHeight / 2;\n      root.y0 = window.innerWidth / 10;\n      root.children.forEach(collapse);\n      update(root);\n      centerTree();\n      setLoading(false);\n    })\n    .catch(error => {\n      console.error(\"Error occurred while fetching and processing data: \", error);\n      setLoading(false);\n    });\n\n    const collapse = (d) => {\n      if(d.children) {\n        d._children = d.children;\n        d._children.forEach(collapse);\n        d.children = null;\n      }\n    }\n\n    const update = (source) => {\n      const treeData = treemap(root);\n      const nodes = treeData.descendants();\n      const links = treeData.descendants().slice(1);\n      nodes.forEach(function(d){ d.y = d.depth * 1250});\n      const node = svg.selectAll('g.node')\n          .data(nodes, function(d) {return d.id || (d.id = ++i); });\n\n      const nodeEnter = node.enter().append('g')\n          .attr('class', 'node')\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n        })\n        .on('click', (event, d) => click(d));\n\n      nodeEnter.append('circle')\n          .attr('class', 'node')\n          .attr('r', 1e-4)\n          .style(\"fill\", function(d) {\n              return d._children ? \"lightsteelblue\" : \"#fff\";\n          });\n\n      nodeEnter.append('text')\n      .attr(\"dy\", \" -1em\") // Shifts the text vertically so it's centered on the node\n      .attr(\"x\", 0) // Centers the text horizontally on the node\n      .style(\"text-anchor\", \"middle\") // Ensures the text is centered at its position\n      .text(function(d) { return d.data.name; });\n      const nodeUpdate = nodeEnter.merge(node);\n\n      nodeUpdate.transition()\n        .duration(duration)\n        .attr(\"transform\", function(d) { \n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n         });\n\n      nodeUpdate.select('circle.node')\n        .attr('r', 15)\n        .style(\"fill\", function(d) {\n            if (d._children) {\n              return \"lightsteelblue\";\n            } else if (d.children) {\n              return \"green\";\n            } else {\n              return \"#fff\";\n            }\n        })\n        .attr('cursor', 'pointer');\n\n      const nodeExit = node.exit().transition()\n          .duration(duration)\n          .attr(\"transform\", function(d) {\n              return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n\n      nodeExit.select('circle')\n        .attr('r', 1e-5);\n\n      nodeExit.select('text')\n        .style('fill-opacity', 1e-5);\n\n      const link = svg.selectAll('path.link')\n          .data(links, function(d) { return d.id; });\n\n      const linkEnter = link.enter().insert('path', \"g\")\n          .attr(\"class\", \"link\")\n          .attr('d', function(d){\n            var o = {x: source.x0, y: source.y0}\n            return diagonal(o, o)\n          });\n\n      const linkUpdate = linkEnter.merge(link);\n\n      linkUpdate.transition()\n          .duration(duration)\n          .attr('d', function(d){ return diagonal(d, d.parent) });\n\n      const linkExit = link.exit().transition()\n          .duration(duration)\n          .attr('d', function(d) {\n            var o = {x: source.x, y: source.y}\n            return diagonal(o, o)\n          })\n          .remove();\n\n      nodes.forEach(function(d){\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n\n      function click(d) {\n          let nodeToFocus;\n          \n          // If the clicked node is the root\n          if (d.depth === 0) {\n            if (d.children) { // If the root node has children\n              collapseAll(d); // Collapse all children\n            } else if (d._children) { // If the root node has collapsed children\n              d.children = d._children; // Expand the root node\n              d._children = null;\n            }\n            nodeToFocus = d; // Set the root node as the node to focus\n          } else {\n            if (d.children) {\n              d._children = d.children;\n              d.children = null;\n              nodeToFocus = d.parent;\n            } else {\n              d.children = d._children;\n              d._children = null;\n              nodeToFocus = d;\n            }\n          }\n        \n          update(nodeToFocus); // Update with the node to focus\n          centerNode(nodeToFocus); // Center the node to focus\n        }\n        \n        // This function will recursively collapse all children of a node\n        function collapseAll(node) {\n          if (node.children) {\n            node.children.forEach(collapseAll); // Call this function for each child\n            node._children = node.children; \n            node.children = null; \n          }\n        }\n        \n      function centerNode(source){\n              let scale = 0.8;\n              let x = -source.y * scale + 300; // 750 is half of 1500 (the size defined for the tree layout)\n              let y = -source.x * scale + 300;\n              svgContainer.transition()\n                  .duration(duration)\n                  .ease(d3.easeCubic)\n                  .call(zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n      }\n      \n      function diagonal(s, d) {\n\n        const path = `M ${s.y} ${s.x}\n              C ${(s.y + d.y) / 2} ${s.x},\n                ${(s.y + d.y) / 2} ${d.x},\n                ${d.y} ${d.x}`\n\n        return path\n      }\n    }\n  }\n\n  return (\n    <div className=\"visualisation\">\n      {loading ?\n      <div>Loading...</div> : null}\n      <div className={`svg-container ${loading ? 'hidden' : ''}`} ref={ref}></div>\n    </div>\n  );\n}\n\nexport default TreeVisualisation;","/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js",["88"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Alert, Accordion, Form } from 'react-bootstrap';\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { GiCancel } from \"react-icons/gi\";\nimport '../styles/search.css';\n\nfunction SearchPage() {\n  const [companies, setCompanies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const [selectedSectors, setSelectedSectors] = useState([]);\n  const [selectedExchanges, setSelectedExchanges] = useState([]);\n\n\n  useEffect(() => {\n    search();\n    }, [selectedSectors, selectedExchanges]);\n\n    function search() {\n      const sectors = selectedSectors.join(\",\");\n      const exchanges = selectedExchanges.join(\",\");\n      // Don't make a request if no sectors and no exchanges are selected\n      if (!sectors && !exchanges && !query) {\n          return;\n      }\n      return fetch(`http://localhost:3000/search?query=${query}&sectors=${sectors}&exchanges=${exchanges}`)\n          .then(response => response.json())\n          .then(companies => {\n              if (companies.length === 0) {\n                  setNoResults(true);\n              } else {\n                  setNoResults(false);\n              }\n              setCompanies(companies);\n          });\n  }\n  \n  // Handle the form submission\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  search();\n}\n\n  function handleSectorChange(e) {\n    const value = e.target.value;\n    setSelectedSectors(prevState => {\n        if (prevState.includes(value)) {\n            return prevState.filter(sector => sector !== value);\n        } else {\n            return [...prevState, value];\n        }\n    });\n}\n\nfunction handleExchangeChange(e) {\n        const value = e.target.value;\n        setSelectedExchanges(prevState => {\n            if (prevState.includes(value)) {\n                return prevState.filter(exchange => exchange !== value);\n            } else {\n                return [...prevState, value];\n            }\n        });\n    }\n\n  function handleClear() {\n    setQuery('');\n    setCompanies([]);\n    setNoResults(false);\n  }\n\n  return (\n    <div className='m-4'>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"filter-section\" style={{ display: 'flex', flexDirection: 'center', gap: '10px' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n            <div style={{ position: 'relative', marginRight: '10px', flex: 1 }}>\n              <input \n                name=\"search\" \n                type=\"text\" \n                placeholder=\"Search for companies...\" \n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                style={{ width: '100%', paddingRight: '30px', borderRadius: '4px' }}\n              />\n              <FaTimesCircle \n                style={{ cursor: 'pointer', position: 'absolute', top: '50%', right: '5px', transform: 'translateY(-50%)', color: isHovering ? 'black' : 'grey' }}\n                onMouseEnter={() => setIsHovering(true)}\n                onMouseLeave={() => setIsHovering(false)}\n                onClick={handleClear}\n              />\n            </div>\n            <button \n              type=\"submit\" \n              style={{ backgroundColor: '#4C8BF5', color: 'white', border: 'none', padding: '5px 20px', borderRadius: '4px', cursor: 'pointer' }}\n              onMouseEnter={(e) => e.target.style.backgroundColor = '#3C7CE5'}\n              onMouseLeave={(e) => e.target.style.backgroundColor = '#4C8BF5'}\n            >Search\n            </button>\n          </div>\n        </div>\n      </form>\n      {/* Filters Section */}\n      <Accordion defaultActiveKey=\"\" className=\"mt-3\">\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Filters</Accordion.Header>\n                    <Accordion.Body>\n                        <Form.Group controlId=\"sectors\">\n                          <span className='filter-label'>Sectors</span>\n                          <div className=\"filter-options\">\n                            {[\"Technology\", \"Healthcare\", \"Services\", \"Financial\", \"Utilities\", \"Consumer Goods\", \"Real Estate\", \"Energy\"].map(sector => (\n                            <div className='filter-option' key={sector}>\n                               <Form.Check\n                                    type=\"checkbox\"\n                                    label={sector}\n                                    value={sector}\n                                    onChange={handleSectorChange}\n                                />\n                              </div>\n                            ))}\n                          </div>\n                        </Form.Group>\n                        <Form.Group controlId=\"exchanges\">\n                          <span className='filter-label'>Exchanges</span>\n                          <div className=\"filter-options\">\n                            {/* <Form.Label>Exchanges</Form.Label> */}\n                            {[\"NYSE\", \"NASDAQ\", \"OTC\", \"TSX-V\", \"ASX\", \"LSE\", \"AMEX\", \"TSX\"].map(exchange => (\n                              <div className='filter-option' key={exchange}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={exchange}\n                                    value={exchange}\n                                    onChange={handleExchangeChange}\n                                />\n                                </div>\n                            ))}\n                            </div>\n                        </Form.Group>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n\n      {noResults && \n        <Alert variant=\"danger\" className=\"margin-top\">\n          <GiCancel /> No companies found related to \"{query}\". Please try again with a different query.\n        </Alert>}\n\n      {/* Render the company data. */}\n      {companies.map(company => (\n        <Card key={company.id} className='mt-4'>\n          <Card.Body>\n            <Card.Title>{company.company_name} ({company.ticker})</Card.Title>\n            <Card.Text>{company.company_introduction}</Card.Text>\n            <p><strong>Sector:</strong> {company.sector}</p>\n            <p><strong>Industry:</strong> {company.industry}</p>\n            <p><strong>Exchange:</strong> {company.exchange}</p>\n            <p><strong>Location:</strong> {company.company_location}</p>\n\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"></link>\n            <p><strong>All ESG reports:</strong>\n              <a href={company.source_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view all ESG reports\">\n                  <i class=\"fas fa-external-link-alt\"></i> View Reports\n              </a>\n          </p>\n          <p><strong>Most recent ESG report:</strong>\n              <a href={company.url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view the most recent ESG report\">\n                  <i class=\"fas fa-file-alt\"></i> View Recent Report\n              </a>\n          </p>\n            {company.company_website && (\n              <Button variant=\"primary\" href={company.company_website} target=\"_blank\">Visit company website</Button>\n            )}\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default SearchPage;","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js",["89"],"import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\n\nconst WordCloud = ({ filepath, category }) => {\n    const ref = useRef();\n    const [tooltip, setTooltip] = useState({content: \"\", visibility: false, x: 0, y: 0});\n    const tooltipRef = useRef();\n\n    useEffect(() => {\n        if (!filepath) {\n            return;\n        }\n        fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/${category}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n                console.error(data.error);\n                return;\n            }\n\n            const words = Object.entries(data).map(([word, frequency]) => ({ word, frequency }));\n\n            var width = 1000;\n            var height = 720;\n            var colorInterpolate = getColorScale(category);\n            var color = d => colorInterpolate((d.frequency / d3.max(words, d => d.frequency)) * 0.7 + 0.35);\n\n            var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, d => d.frequency)]).range([10, 100]);\n            var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(() => Math.round(Math.random()) * 90).font(\"Impact\").fontSize(d => fontSize(d.frequency)).on(\"end\", draw);\n\n            function draw(words) {\n                d3.select(ref.current).html(\"\").append(\"svg\")\n                    .attr(\"width\", layout.size()[0])\n                    .attr(\"height\", layout.size()[1])\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n                    .selectAll(\"text\")\n                    .data(words)\n                    .enter().append(\"text\")\n                    .style(\"font-size\", d => d.size + \"px\")\n                    .style(\"font-family\", \"Impact\")\n                    .style(\"fill\", color)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"transform\", d => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\")\n                    .text(d => d.word)\n                    .on(\"mouseover\", mouseover)\n                    .on(\"mouseout\", mouseout)\n                    .attr(\"class\", \"word\");\n            }\n\n            function darkenColor(d){\n                return d3.rgb(color(d)).darker(1);\n            }\n\n            function mouseover(event, d) {\n                const totalWords = d3.sum(words, d => d.frequency);\n                const percentage = (d.frequency / totalWords * 100).toFixed(2);\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"fill\", () => darkenColor(d))\n                    .style(\"font-size\", (d.size + 5) + \"px\");\n                setTooltip({content: `${d.word}: ${d.frequency} (${percentage}%)`, visibility: true, x: event.clientX, y: event.clientY});\n            }\n\n            function mouseout(event, d) {\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"font-size\", d.size + \"px\")\n                    .style(\"fill\", () => color(d));\n                setTooltip({...tooltip, visibility: false});\n            }\n\n            layout.start();\n        });\n    }, [filepath, category]);\n\n    const getColorScale = (category) => {\n        switch (category) {\n            case \"environmental\":\n                return d3.interpolateGreens;\n            case \"social\":\n                return d3.interpolateOranges;\n            case \"governance\":\n                return d3.interpolateBlues;\n            default:\n                return d3.interpolateBlues;\n        }\n    };\n    \n    return (\n        <div>\n            <div ref={ref}></div>\n            {tooltip.visibility && \n                <div ref={tooltipRef} style={{\n                    position: \"absolute\",\n                    left: tooltip.x,\n                    top: tooltip.y,\n                    background: \"rgba(0, 0, 0, 0.7)\",\n                    color: \"#fff\",\n                    padding: \"3px 8px\",\n                    borderRadius: \"4px\",\n                    pointerEvents: \"none\",\n                    fontSize: \"14px\",\n                    transform: 'translate(-50%, -100%)'\n                }}>{tooltip.content}</div>\n            }\n        </div>\n    );\n};\n\nexport default WordCloud;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js",["90"],"import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport '../styles/sentiment.css';\n\n\nconst BubbleChart = ({ filepath }) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (!filepath) {\n            return;\n        \n        }\n        \n        const categories = {\n            environmental: [\n                'clean', 'environmental', 'epa', 'sustainability', 'climate', 'warming', 'biofuels', 'biofuel',\n                'green', 'renewable', 'solar', 'stewardship', 'wind', 'emission', 'emissions', 'ghg', 'ghgs',\n                'greenhouse', 'atmosphere', 'emit', 'agriculture', 'deforestation', 'pesticide', 'pesticides',\n                'wetlands', 'zoning', 'biodiversity', 'species', 'wilderness', 'wildlife', 'freshwater',\n                'groundwater', 'water', 'cleaner', 'cleanup', 'coal', 'contamination', 'fossil', 'resource',\n                'air', 'carbon', 'nitrogen', 'pollution', 'superfund', 'biphenyls', 'hazardous', 'householding',\n                'pollutants', 'printing', 'recycling', 'toxic', 'waste', 'wastes', 'weee', 'recycle'],\n            social:  [\n                'citizen', 'citizens', 'csr', 'disabilities', 'disability', 'disabled', 'human', 'nations',\n                'social', 'un', 'veteran', 'veterans', 'vulnerable', 'children', 'epidemic', 'health', 'healthy',\n                'ill', 'illness', 'pandemic', 'childbirth', 'drug', 'medicaid', 'medicare', 'medicine', 'medicines',\n                'hiv', 'alcohol', 'drinking', 'bugs', 'conformance', 'defects', 'fda', 'inspection', 'inspections',\n                'minerals', 'standardization', 'warranty', 'dignity', 'discriminate', 'discriminated', 'discriminating',\n                'discrimination', 'equality', 'freedom', 'humanity', 'nondiscrimination', 'sexual', 'communities',\n                'community', 'expression', 'marriage', 'privacy', 'peace', 'bargaining', 'eeo', 'fairness', 'fla',\n                'harassment', 'injury', 'labor', 'overtime', 'ruggie', 'sick', 'wage', 'wages', 'workplace', 'bisexual',\n                'diversity', 'ethnic', 'ethnically', 'ethnicities', 'ethnicity', 'female', 'females', 'gay', 'gays',\n                'gender', 'genders', 'homosexual', 'immigration', 'lesbian', 'lesbians', 'lgbt', 'minorities',\n                'minority', 'ms', 'race', 'racial', 'religion', 'religious', 'sex', 'transgender', 'woman', 'women',\n                'occupational', 'safe', 'safely', 'safety', 'ilo', 'labour', 'eicc', 'endowment', 'endowments',\n                'people', 'philanthropic', 'philanthropy', 'socially', 'societal', 'society', 'welfare', 'charitable',\n                'charities', 'charity', 'donate', 'donated', 'donates', 'donating', 'donation', 'donations', 'donors',\n                'foundation', 'foundations', 'gift', 'gifts', 'nonprofit', 'poverty', 'courses', 'educate', 'educated',\n                'educates', 'educating', 'education', 'educational', 'learning', 'mentoring', 'scholarships', 'teach',\n                'teacher', 'teachers', 'teaching', 'training', 'employ', 'employment', 'headcount', 'hire', 'hired',\n                'hires', 'hiring', 'staffing', 'unemployment'],\n            governance: [\n                'align', 'aligned', 'aligning', 'alignment', 'aligns', 'bylaw', 'bylaws', 'charter',\n                'charters', 'culture', 'death', 'duly', 'parents', 'independent', 'compliance', 'conduct',\n                'conformity', 'governance', 'misconduct', 'parachute', 'parachutes', 'perquisites', 'plane',\n                'planes', 'poison', 'retirement', 'approval', 'approvals', 'approve', 'approved', 'approves',\n                'approving', 'assess', 'assessed', 'assesses', 'assessing', 'assessment', 'assessments',\n                'audit', 'audited', 'auditing', 'auditor', 'auditors', 'audits', 'control', 'controls', 'coso',\n                'detect', 'detected', 'detecting', 'detection', 'evaluate', 'evaluated', 'evaluates', 'evaluating',\n                'evaluation', 'evaluations', 'examination', 'examinations', 'examine', 'examined', 'examines',\n                'examining', 'irs', 'oversee', 'overseeing', 'oversees', 'oversight', 'review', 'reviewed',\n                'reviewing', 'reviews', 'rotation', 'test', 'tested', 'testing', 'tests', 'treadway', 'backgrounds',\n                'independence', 'leadership', 'nomination', 'nominations', 'nominee', 'nominees', 'perspectives',\n                'qualifications', 'refreshment', 'skill', 'skills', 'succession', 'tenure', 'vacancies', 'vacancy',\n                'appreciation', 'award', 'awarded', 'awarding', 'awards', 'bonus', 'bonuses', 'cd', 'compensate',\n                'compensated', 'compensates', 'compensating', 'compensation', 'eip', 'iso', 'isos', 'payout', 'payouts',\n                'pension', 'prsu', 'prsus', 'recoupment', 'remuneration', 'reward', 'rewarding', 'rewards', 'rsu',\n                'rsus', 'salaries', 'salary', 'severance', 'vest', 'vested', 'vesting', 'vests', 'ballot', 'ballots',\n                'cast', 'consent', 'elect', 'elected', 'electing', 'election', 'elections', 'elects', 'nominate',\n                'nominated', 'plurality', 'proponent', 'proponents', 'proposal', 'proposals', 'proxies', 'quorum',\n                'vote', 'voted', 'votes', 'voting', 'brother', 'clicking', 'conflict', 'conflicts', 'family',\n                'grandchildren', 'grandparent', 'grandparents', 'inform', 'insider', 'insiders', 'inspector',\n                'inspectors', 'interlocks', 'nephews', 'nieces', 'posting', 'relatives', 'siblings', 'sister',\n                'son', 'spousal', 'spouse', 'spouses', 'stepchildren', 'stepparents', 'transparency', 'transparent',\n                'visit', 'visiting', 'visits', 'webpage', 'website', 'attract', 'attracting', 'attracts', 'incentive',\n                'incentives', 'interview', 'interviews', 'motivate', 'motivated', 'motivates', 'motivating',\n                'motivation', 'recruit', 'recruiting', 'recruitment', 'retain', 'retainer', 'retainers', 'retaining',\n                'retention', 'talent', 'talented', 'talents', 'cobc', 'ethic', 'ethical', 'ethically', 'ethics',\n                'honesty', 'bribery', 'corrupt', 'corruption', 'crimes', 'embezzlement', 'grassroots', 'influence',\n                'influences', 'influencing', 'lobbied', 'lobbies', 'lobby', 'lobbying', 'lobbyist', 'lobbyists',\n                'whistleblower', 'announce', 'announced', 'announcement', 'announcements', 'announces', 'announcing',\n                'communicate', 'communicated', 'communicates', 'communicating', 'erm', 'fairly', 'integrity', 'liaison',\n                'presentation', 'presentations', 'sustainable', 'asc', 'disclose', 'disclosed', 'discloses', 'disclosing',\n                'disclosure', 'disclosures', 'fasb', 'gaap', 'objectivity', 'press', 'sarbanes', 'engagement',\n                'engagements', 'feedback', 'hotline', 'investor', 'invite', 'invited', 'mail', 'mailed', 'mailing',\n                'mailings', 'notice', 'relations', 'stakeholder', 'stakeholders', 'compact', 'ungc']\n        };\n    \n        const currentRef = ref.current;\n\n            fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/all`)\n                .then(response => response.json())\n                .then(rawData => {\n                    const data = Object.entries(rawData).map(([id, value]) => {\n                        let category = '';\n                        if (categories.environmental.includes(id)) category = 'environmental';\n                        if (categories.social.includes(id)) category = 'social';\n                        if (categories.governance.includes(id)) category = 'governance';\n                        return { id, value, category }; // add category\n            });\n            \n          \n            const width = 1500; // Changed from 928\n            const height = width;\n            const margin = 1;\n            const format = d3.format(\",d\");\n\n            const tooltip = d3.select('body').append('div')\n                .style('position', 'absolute')\n                .style('z-index', '10')\n                .style('visibility', 'hidden')\n                .style('background', 'white')\n                .style('border', 'solid')\n                .style('border-width', '1px')\n                .style('border-radius', '5px')\n                .style('padding', '10px');\n\n\n            const getColorScale = (category) => {\n                switch (category) {\n                    case \"environmental\":\n                        return d3.scaleSequential(d3.interpolateGreens);\n                    case \"social\":\n                        return d3.scaleSequential(d3.interpolateOranges);\n                    case \"governance\":\n                        return d3.scaleSequential(d3.interpolateBlues);\n                    default:\n                        return d3.scaleSequential(d3.interpolateBlues);\n                }\n            };\n\n            \n            const color = d => {\n                let scale = getColorScale(d.data.category);\n                scale.domain([0, 1]);\n\n                return scale(Math.random());\n\n            };\n\n            const pack = d3.pack()\n                .size([width - margin * 2, height - margin * 2])\n                .padding(3);\n\n            const hierarchyData = d3.hierarchy({ children: data })\n                .sum(d => d.value);\n\n            const root = pack(hierarchyData);\n\n            const svg = d3.select(ref.current)\n                .append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"viewBox\", [-margin, -margin, width, height])\n                .attr(\"style\", \"max-width: 100%; height: auto; font: 10px sans-serif;\")\n                .attr(\"text-anchor\", \"middle\");\n\n            const node = svg.append(\"g\")\n              .selectAll(\"g\")\n              .data(root.leaves())\n              .join(\"g\")\n                .attr(\"transform\", d => `translate(${d.x},${d.y})`);\n\n                node.append(\"circle\")\n                .attr(\"fill-opacity\", 0.7)\n                .attr(\"fill\", color)\n                .attr(\"r\", d => d.r)\n                .on(\"mouseover\", function(event, d) {\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr(\"fill-opacity\", 1)\n                        .attr(\"r\", d.r * 1.35); // Increase size by 20%\n                    \n                    tooltip.style('visibility', 'visible')\n                        .text(`Frequency: ${d.data.value}`)\n                        .style('left', `${event.pageX}px`)\n                        .style('top', `${event.pageY}px`);\n            \n                    // Add a text label for the word frequency\n                    svg.append(\"text\")\n                        .attr(\"x\", d.x)\n                        .attr(\"y\", d.y - 15)\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"fill\", \"#000\");\n                })\n                .on(\"mouseout\", function() {\n                    d3.select(this)\n                        .transition()\n                        .duration(200)\n                        .attr(\"fill-opacity\", 0.7)\n                        .attr(\"r\", d => d.r); // Restore the original size\n\n                    // Hide tooltip\n                    tooltip.style('visibility', 'hidden');\n                });\n            \n\n            node.append(\"text\")\n                .text(d => d.data.id)\n                .attr(\"fill\", \"#000\")\n                .style(\"font-size\", d => `${d.r / 3}px`);\n\n        });\n\n        return () => {\n            d3.select(currentRef).selectAll(\"svg\").remove();\n        }\n\n    }, [filepath]);\n\n    return (\n        <div ref={ref}></div>\n    );\n};\n\nexport default BubbleChart;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":42,"nodeType":"97","messageId":"98","endLine":3,"endColumn":46},{"ruleId":"95","severity":1,"message":"99","line":159,"column":13,"nodeType":"97","messageId":"98","endLine":159,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":18,"column":8,"nodeType":"102","endLine":18,"endColumn":44,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":78,"column":8,"nodeType":"102","endLine":78,"endColumn":28,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"106","line":97,"column":19,"nodeType":"97","messageId":"98","endLine":97,"endColumn":25},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'linkExit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'tooltip'. Either include it or remove the dependency array. You can also do a functional update 'setTooltip(t => ...)' if you only need 'tooltip' in the 'setTooltip' call.",["110"],"'format' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [selectedSectors, selectedExchanges, search]",{"range":"115","text":"116"},"Update the dependencies array to be: [filepath, category, tooltip]",{"range":"117","text":"118"},[642,678],"[selectedSectors, selectedExchanges, search]",[3315,3335],"[filepath, category, tooltip]"]