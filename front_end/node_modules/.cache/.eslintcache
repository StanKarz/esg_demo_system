[{"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js":"1","/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js":"2","/Users/stan/Desktop/esg_demo_system/front_end/src/App.js":"3","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js":"4","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js":"5","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js":"6","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js":"7","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js":"8","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js":"9","/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js":"10","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js":"11","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js":"12","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js":"13","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js":"14","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js":"15","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js":"16","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js":"17","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/MultiReportComparison.js":"18","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SingleReportVisualisation.js":"19"},{"size":627,"mtime":1691011823905,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1691011823907,"results":"22","hashOfConfig":"21"},{"size":2301,"mtime":1691015108234,"results":"23","hashOfConfig":"21"},{"size":1987,"mtime":1691848698609,"results":"24","hashOfConfig":"21"},{"size":862,"mtime":1691848952797,"results":"25","hashOfConfig":"21"},{"size":1943,"mtime":1691014900677,"results":"26","hashOfConfig":"21"},{"size":1937,"mtime":1691111345840,"results":"27","hashOfConfig":"21"},{"size":7721,"mtime":1691848720534,"results":"28","hashOfConfig":"21"},{"size":8614,"mtime":1691848338312,"results":"29","hashOfConfig":"21"},{"size":2093,"mtime":1691015765366,"results":"30","hashOfConfig":"21"},{"size":7512,"mtime":1691011823906,"results":"31","hashOfConfig":"21"},{"size":1456,"mtime":1691848768626,"results":"32","hashOfConfig":"21"},{"size":473,"mtime":1691848673889,"results":"33","hashOfConfig":"21"},{"size":4372,"mtime":1691538161508,"results":"34","hashOfConfig":"21"},{"size":1366,"mtime":1687400085627,"results":"35","hashOfConfig":"21"},{"size":14001,"mtime":1691537704964,"results":"36","hashOfConfig":"21"},{"size":4608,"mtime":1691011823906,"results":"37","hashOfConfig":"21"},{"size":7261,"mtime":1691848662125,"results":"38","hashOfConfig":"21"},{"size":5023,"mtime":1691848740239,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9pr7aj",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js",[],["83","84"],"/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/App.js",["85"],"import React from \"react\";\nimport SearchPage from \"./pages/SearchPage\";\nimport { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport MultiReportComparison from \"./pages/MultiReportComparison\";\nimport SingleReportVisualisation from \"./pages/SingleReportVisualisation\";\nimport Navbar from \"./components/Navbar\";\nimport ReportStructure from \"./pages/ReportStructure\";\nimport TreeVisualisation from \"./pages/TreeVisualisation\";\nimport WordFrequency from \"./pages/WordFrequency\";\nimport SentimentAnalysis from \"./pages/SentimentAnalysis\";\nimport SentimentVis from \"./pages/SentimentVis\";\nimport Topics from \"./pages/Topics\";\nimport TopicsVis from \"./pages/TopicsVis\";\nimport TopicTaxonomy from \"./pages/TopicTaxonomy\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/single\" element={<SingleReportVisualisation />} />\n          <Route path=\"/multi\" element={<MultiReportComparison />} />\n          <Route path=\"/companies\" element={<SearchPage />} />\n          <Route\n            path=\"/visualisations/report_structure\"\n            element={<ReportStructure />}\n          />\n          <Route\n            path=\"/visualisations/report_structure/tree/:filename\"\n            element={<TreeVisualisation />}\n          />\n          <Route\n            path=\"/visualisations/word_frequency\"\n            element={<WordFrequency />}\n          />\n          <Route\n            path=\"/visualisations/word_frequency/:filename\"\n            element={<WordFrequency />}\n          />\n          <Route\n            path=\"/visualisations/sentiment_analysis\"\n            element={<SentimentAnalysis />}\n          />\n          <Route\n            path=\"/visualisations/sentiment_analysis/:filename\"\n            element={<SentimentVis />}\n          />\n          <Route path=\"/visualisations/topics\" element={<Topics />} />\n          <Route\n            path=\"/visualisations/topics/:fileName\"\n            element={<TopicsVis />}\n          />\n          <Route\n            path=\"/visualisations/topic_taxonomy\"\n            element={<TopicTaxonomy />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js",["86","87","88","89","90"],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js",["91"],"/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js",["92"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Alert, Accordion, Form } from 'react-bootstrap';\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { GiCancel } from \"react-icons/gi\";\nimport '../styles/search.css';\n\nfunction SearchPage() {\n  const [companies, setCompanies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const [selectedSectors, setSelectedSectors] = useState([]);\n  const [selectedExchanges, setSelectedExchanges] = useState([]);\n\n\n  useEffect(() => {\n    search();\n    }, [selectedSectors, selectedExchanges]);\n\n    function search() {\n      const sectors = selectedSectors.join(\",\");\n      const exchanges = selectedExchanges.join(\",\");\n      // Don't make a request if no sectors and no exchanges are selected\n      if (!sectors && !exchanges && !query) {\n          return;\n      }\n      return fetch(`http://localhost:3000/search?query=${query}&sectors=${sectors}&exchanges=${exchanges}`)\n          .then(response => response.json())\n          .then(companies => {\n              if (companies.length === 0) {\n                  setNoResults(true);\n              } else {\n                  setNoResults(false);\n              }\n              setCompanies(companies);\n          });\n  }\n  \n  // Handle the form submission\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  search();\n}\n\n  function handleSectorChange(e) {\n    const value = e.target.value;\n    setSelectedSectors(prevState => {\n        if (prevState.includes(value)) {\n            return prevState.filter(sector => sector !== value);\n        } else {\n            return [...prevState, value];\n        }\n    });\n}\n\nfunction handleExchangeChange(e) {\n        const value = e.target.value;\n        setSelectedExchanges(prevState => {\n            if (prevState.includes(value)) {\n                return prevState.filter(exchange => exchange !== value);\n            } else {\n                return [...prevState, value];\n            }\n        });\n    }\n\n  function handleClear() {\n    setQuery('');\n    setCompanies([]);\n    setNoResults(false);\n  }\n\n  return (\n    <div className='m-4'>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"filter-section\" style={{ display: 'flex', flexDirection: 'center', gap: '10px' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n            <div style={{ position: 'relative', marginRight: '10px', flex: 1 }}>\n              <input \n                name=\"search\" \n                type=\"text\" \n                placeholder=\"Search for companies...\" \n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                style={{ width: '100%', paddingRight: '30px', borderRadius: '4px' }}\n              />\n              <FaTimesCircle \n                style={{ cursor: 'pointer', position: 'absolute', top: '50%', right: '5px', transform: 'translateY(-50%)', color: isHovering ? 'black' : 'grey' }}\n                onMouseEnter={() => setIsHovering(true)}\n                onMouseLeave={() => setIsHovering(false)}\n                onClick={handleClear}\n              />\n            </div>\n            <button \n              type=\"submit\" \n              style={{ backgroundColor: '#4C8BF5', color: 'white', border: 'none', padding: '5px 20px', borderRadius: '4px', cursor: 'pointer' }}\n              onMouseEnter={(e) => e.target.style.backgroundColor = '#3C7CE5'}\n              onMouseLeave={(e) => e.target.style.backgroundColor = '#4C8BF5'}\n            >Search\n            </button>\n          </div>\n        </div>\n      </form>\n      {/* Filters Section */}\n      <Accordion defaultActiveKey=\"\" className=\"mt-3\">\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Filters</Accordion.Header>\n                    <Accordion.Body>\n                        <Form.Group controlId=\"sectors\">\n                          <span className='filter-label'>Sectors</span>\n                          <div className=\"filter-options\">\n                            {[\"Technology\", \"Healthcare\", \"Services\", \"Financial\", \"Utilities\", \"Consumer Goods\", \"Real Estate\", \"Energy\"].map(sector => (\n                            <div className='filter-option' key={sector}>\n                               <Form.Check\n                                    type=\"checkbox\"\n                                    label={sector}\n                                    value={sector}\n                                    onChange={handleSectorChange}\n                                />\n                              </div>\n                            ))}\n                          </div>\n                        </Form.Group>\n                        <Form.Group controlId=\"exchanges\">\n                          <span className='filter-label'>Exchanges</span>\n                          <div className=\"filter-options\">\n                            {/* <Form.Label>Exchanges</Form.Label> */}\n                            {[\"NYSE\", \"NASDAQ\", \"OTC\", \"TSX-V\", \"ASX\", \"LSE\", \"AMEX\", \"TSX\"].map(exchange => (\n                              <div className='filter-option' key={exchange}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={exchange}\n                                    value={exchange}\n                                    onChange={handleExchangeChange}\n                                />\n                                </div>\n                            ))}\n                            </div>\n                        </Form.Group>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n\n      {noResults && \n        <Alert variant=\"danger\" className=\"margin-top\">\n          <GiCancel /> No companies found related to \"{query}\". Please try again with a different query.\n        </Alert>}\n\n      {/* Render the company data. */}\n      {companies.map(company => (\n        <Card key={company.id} className='mt-4'>\n          <Card.Body>\n            <Card.Title>{company.company_name} ({company.ticker})</Card.Title>\n            <Card.Text>{company.company_introduction}</Card.Text>\n            <p><strong>Sector:</strong> {company.sector}</p>\n            <p><strong>Industry:</strong> {company.industry}</p>\n            <p><strong>Exchange:</strong> {company.exchange}</p>\n            <p><strong>Location:</strong> {company.company_location}</p>\n\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"></link>\n            <p><strong>All ESG reports:</strong>\n              <a href={company.source_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view all ESG reports\">\n                  <i class=\"fas fa-external-link-alt\"></i> View Reports\n              </a>\n          </p>\n          <p><strong>Most recent ESG report:</strong>\n              <a href={company.url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view the most recent ESG report\">\n                  <i class=\"fas fa-file-alt\"></i> View Recent Report\n              </a>\n          </p>\n            {company.company_website && (\n              <Button variant=\"primary\" href={company.company_website} target=\"_blank\">Visit company website</Button>\n            )}\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default SearchPage;","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js",["93","94","95","96","97"],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js",["98","99"],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js",["100"],"import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport d3Cloud from \"d3-cloud\";\n\nconst WordCloud = ({ filepath, category }) => {\n  const ref = useRef();\n  const [tooltip, setTooltip] = useState({\n    content: \"\",\n    visibility: false,\n    x: 0,\n    y: 0,\n  });\n  const tooltipRef = useRef();\n\n  useEffect(() => {\n    if (!filepath) {\n      return;\n    }\n    fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/${category}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          console.error(data.error);\n          return;\n        }\n\n        const words = Object.entries(data).map(([word, frequency]) => ({\n          word,\n          frequency,\n        }));\n\n        var width = 1000;\n        var height = 720;\n        var colorInterpolate = getColorScale(category);\n        var color = (d) =>\n          colorInterpolate(\n            (d.frequency / d3.max(words, (d) => d.frequency)) * 0.7 + 0.35\n          );\n\n        var fontSize = d3\n          .scalePow()\n          .exponent(0.5)\n          .domain([0, d3.max(words, (d) => d.frequency)])\n          .range([10, 100]);\n        var layout = d3Cloud()\n          .size([width, height])\n          .words(words)\n          .padding(7)\n          .rotate(() => Math.round(Math.random()) * 90)\n          .font(\"Impact\")\n          .fontSize((d) => fontSize(d.frequency))\n          .on(\"end\", draw);\n\n        function draw(words) {\n          d3.select(ref.current)\n            .html(\"\")\n            .append(\"svg\")\n            .attr(\"width\", layout.size()[0])\n            .attr(\"height\", layout.size()[1])\n            .append(\"g\")\n            .attr(\n              \"transform\",\n              \"translate(\" +\n                layout.size()[0] / 2 +\n                \",\" +\n                layout.size()[1] / 2 +\n                \")\"\n            )\n            .selectAll(\"text\")\n            .data(words)\n            .enter()\n            .append(\"text\")\n            .style(\"font-size\", (d) => d.size + \"px\")\n            .style(\"font-family\", \"Impact\")\n            .style(\"fill\", color)\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\n              \"transform\",\n              (d) => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\"\n            )\n            .text((d) => d.word)\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseout\", mouseout)\n            .attr(\"class\", \"word\");\n        }\n\n        function darkenColor(d) {\n          return d3.rgb(color(d)).darker(1);\n        }\n\n        function mouseover(event, d) {\n          const totalWords = d3.sum(words, (d) => d.frequency);\n          const percentage = ((d.frequency / totalWords) * 100).toFixed(2);\n          d3.select(event.target)\n            .transition()\n            .duration(300)\n            .style(\"fill\", () => darkenColor(d))\n            .style(\"font-size\", d.size + 5 + \"px\");\n          setTooltip({\n            content: `${d.word}: ${d.frequency} (${percentage}%)`,\n            visibility: true,\n            x: event.clientX,\n            y: event.clientY,\n          });\n        }\n\n        function mouseout(event, d) {\n          d3.select(event.target)\n            .transition()\n            .duration(300)\n            .style(\"font-size\", d.size + \"px\")\n            .style(\"fill\", () => color(d));\n          setTooltip({ ...tooltip, visibility: false });\n        }\n\n        layout.start();\n      });\n  }, [filepath, category]);\n\n  const getColorScale = (category) => {\n    switch (category) {\n      case \"environmental\":\n        return d3.interpolateGreens;\n      case \"social\":\n        return d3.interpolateOranges;\n      case \"governance\":\n        return d3.interpolateBlues;\n      default:\n        return d3.interpolateBlues;\n    }\n  };\n\n  return (\n    <div>\n      <div ref={ref}></div>\n      {tooltip.visibility && (\n        <div\n          ref={tooltipRef}\n          style={{\n            position: \"absolute\",\n            left: tooltip.x,\n            top: tooltip.y,\n            background: \"rgba(0, 0, 0, 0.7)\",\n            color: \"#fff\",\n            padding: \"3px 8px\",\n            borderRadius: \"4px\",\n            pointerEvents: \"none\",\n            fontSize: \"14px\",\n            transform: \"translate(-50%, -100%)\",\n          }}\n        >\n          {tooltip.content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WordCloud;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js",["101"],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../styles/sentiment.css\";\n\nconst BubbleChart = ({ filepath }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (!filepath) {\n      return;\n    }\n\n    const categories = {\n      environmental: [\n        \"clean\",\n        \"environmental\",\n        \"epa\",\n        \"sustainability\",\n        \"climate\",\n        \"warming\",\n        \"biofuels\",\n        \"biofuel\",\n        \"green\",\n        \"renewable\",\n        \"solar\",\n        \"stewardship\",\n        \"wind\",\n        \"emission\",\n        \"emissions\",\n        \"ghg\",\n        \"ghgs\",\n        \"greenhouse\",\n        \"atmosphere\",\n        \"emit\",\n        \"agriculture\",\n        \"deforestation\",\n        \"pesticide\",\n        \"pesticides\",\n        \"wetlands\",\n        \"zoning\",\n        \"biodiversity\",\n        \"species\",\n        \"wilderness\",\n        \"wildlife\",\n        \"freshwater\",\n        \"groundwater\",\n        \"water\",\n        \"cleaner\",\n        \"cleanup\",\n        \"coal\",\n        \"contamination\",\n        \"fossil\",\n        \"resource\",\n        \"air\",\n        \"carbon\",\n        \"nitrogen\",\n        \"pollution\",\n        \"superfund\",\n        \"biphenyls\",\n        \"hazardous\",\n        \"householding\",\n        \"pollutants\",\n        \"printing\",\n        \"recycling\",\n        \"toxic\",\n        \"waste\",\n        \"wastes\",\n        \"weee\",\n        \"recycle\",\n      ],\n      social: [\n        \"citizen\",\n        \"citizens\",\n        \"csr\",\n        \"disabilities\",\n        \"disability\",\n        \"disabled\",\n        \"human\",\n        \"nations\",\n        \"social\",\n        \"un\",\n        \"veteran\",\n        \"veterans\",\n        \"vulnerable\",\n        \"children\",\n        \"epidemic\",\n        \"health\",\n        \"healthy\",\n        \"ill\",\n        \"illness\",\n        \"pandemic\",\n        \"childbirth\",\n        \"drug\",\n        \"medicaid\",\n        \"medicare\",\n        \"medicine\",\n        \"medicines\",\n        \"hiv\",\n        \"alcohol\",\n        \"drinking\",\n        \"bugs\",\n        \"conformance\",\n        \"defects\",\n        \"fda\",\n        \"inspection\",\n        \"inspections\",\n        \"minerals\",\n        \"standardization\",\n        \"warranty\",\n        \"dignity\",\n        \"discriminate\",\n        \"discriminated\",\n        \"discriminating\",\n        \"discrimination\",\n        \"equality\",\n        \"freedom\",\n        \"humanity\",\n        \"nondiscrimination\",\n        \"sexual\",\n        \"communities\",\n        \"community\",\n        \"expression\",\n        \"marriage\",\n        \"privacy\",\n        \"peace\",\n        \"bargaining\",\n        \"eeo\",\n        \"fairness\",\n        \"fla\",\n        \"harassment\",\n        \"injury\",\n        \"labor\",\n        \"overtime\",\n        \"ruggie\",\n        \"sick\",\n        \"wage\",\n        \"wages\",\n        \"workplace\",\n        \"bisexual\",\n        \"diversity\",\n        \"ethnic\",\n        \"ethnically\",\n        \"ethnicities\",\n        \"ethnicity\",\n        \"female\",\n        \"females\",\n        \"gay\",\n        \"gays\",\n        \"gender\",\n        \"genders\",\n        \"homosexual\",\n        \"immigration\",\n        \"lesbian\",\n        \"lesbians\",\n        \"lgbt\",\n        \"minorities\",\n        \"minority\",\n        \"ms\",\n        \"race\",\n        \"racial\",\n        \"religion\",\n        \"religious\",\n        \"sex\",\n        \"transgender\",\n        \"woman\",\n        \"women\",\n        \"occupational\",\n        \"safe\",\n        \"safely\",\n        \"safety\",\n        \"ilo\",\n        \"labour\",\n        \"eicc\",\n        \"endowment\",\n        \"endowments\",\n        \"people\",\n        \"philanthropic\",\n        \"philanthropy\",\n        \"socially\",\n        \"societal\",\n        \"society\",\n        \"welfare\",\n        \"charitable\",\n        \"charities\",\n        \"charity\",\n        \"donate\",\n        \"donated\",\n        \"donates\",\n        \"donating\",\n        \"donation\",\n        \"donations\",\n        \"donors\",\n        \"foundation\",\n        \"foundations\",\n        \"gift\",\n        \"gifts\",\n        \"nonprofit\",\n        \"poverty\",\n        \"courses\",\n        \"educate\",\n        \"educated\",\n        \"educates\",\n        \"educating\",\n        \"education\",\n        \"educational\",\n        \"learning\",\n        \"mentoring\",\n        \"scholarships\",\n        \"teach\",\n        \"teacher\",\n        \"teachers\",\n        \"teaching\",\n        \"training\",\n        \"employ\",\n        \"employment\",\n        \"headcount\",\n        \"hire\",\n        \"hired\",\n        \"hires\",\n        \"hiring\",\n        \"staffing\",\n        \"unemployment\",\n      ],\n      governance: [\n        \"align\",\n        \"aligned\",\n        \"aligning\",\n        \"alignment\",\n        \"aligns\",\n        \"bylaw\",\n        \"bylaws\",\n        \"charter\",\n        \"charters\",\n        \"culture\",\n        \"death\",\n        \"duly\",\n        \"parents\",\n        \"independent\",\n        \"compliance\",\n        \"conduct\",\n        \"conformity\",\n        \"governance\",\n        \"misconduct\",\n        \"parachute\",\n        \"parachutes\",\n        \"perquisites\",\n        \"plane\",\n        \"planes\",\n        \"poison\",\n        \"retirement\",\n        \"approval\",\n        \"approvals\",\n        \"approve\",\n        \"approved\",\n        \"approves\",\n        \"approving\",\n        \"assess\",\n        \"assessed\",\n        \"assesses\",\n        \"assessing\",\n        \"assessment\",\n        \"assessments\",\n        \"audit\",\n        \"audited\",\n        \"auditing\",\n        \"auditor\",\n        \"auditors\",\n        \"audits\",\n        \"control\",\n        \"controls\",\n        \"coso\",\n        \"detect\",\n        \"detected\",\n        \"detecting\",\n        \"detection\",\n        \"evaluate\",\n        \"evaluated\",\n        \"evaluates\",\n        \"evaluating\",\n        \"evaluation\",\n        \"evaluations\",\n        \"examination\",\n        \"examinations\",\n        \"examine\",\n        \"examined\",\n        \"examines\",\n        \"examining\",\n        \"irs\",\n        \"oversee\",\n        \"overseeing\",\n        \"oversees\",\n        \"oversight\",\n        \"review\",\n        \"reviewed\",\n        \"reviewing\",\n        \"reviews\",\n        \"rotation\",\n        \"test\",\n        \"tested\",\n        \"testing\",\n        \"tests\",\n        \"treadway\",\n        \"backgrounds\",\n        \"independence\",\n        \"leadership\",\n        \"nomination\",\n        \"nominations\",\n        \"nominee\",\n        \"nominees\",\n        \"perspectives\",\n        \"qualifications\",\n        \"refreshment\",\n        \"skill\",\n        \"skills\",\n        \"succession\",\n        \"tenure\",\n        \"vacancies\",\n        \"vacancy\",\n        \"appreciation\",\n        \"award\",\n        \"awarded\",\n        \"awarding\",\n        \"awards\",\n        \"bonus\",\n        \"bonuses\",\n        \"cd\",\n        \"compensate\",\n        \"compensated\",\n        \"compensates\",\n        \"compensating\",\n        \"compensation\",\n        \"eip\",\n        \"iso\",\n        \"isos\",\n        \"payout\",\n        \"payouts\",\n        \"pension\",\n        \"prsu\",\n        \"prsus\",\n        \"recoupment\",\n        \"remuneration\",\n        \"reward\",\n        \"rewarding\",\n        \"rewards\",\n        \"rsu\",\n        \"rsus\",\n        \"salaries\",\n        \"salary\",\n        \"severance\",\n        \"vest\",\n        \"vested\",\n        \"vesting\",\n        \"vests\",\n        \"ballot\",\n        \"ballots\",\n        \"cast\",\n        \"consent\",\n        \"elect\",\n        \"elected\",\n        \"electing\",\n        \"election\",\n        \"elections\",\n        \"elects\",\n        \"nominate\",\n        \"nominated\",\n        \"plurality\",\n        \"proponent\",\n        \"proponents\",\n        \"proposal\",\n        \"proposals\",\n        \"proxies\",\n        \"quorum\",\n        \"vote\",\n        \"voted\",\n        \"votes\",\n        \"voting\",\n        \"brother\",\n        \"clicking\",\n        \"conflict\",\n        \"conflicts\",\n        \"family\",\n        \"grandchildren\",\n        \"grandparent\",\n        \"grandparents\",\n        \"inform\",\n        \"insider\",\n        \"insiders\",\n        \"inspector\",\n        \"inspectors\",\n        \"interlocks\",\n        \"nephews\",\n        \"nieces\",\n        \"posting\",\n        \"relatives\",\n        \"siblings\",\n        \"sister\",\n        \"son\",\n        \"spousal\",\n        \"spouse\",\n        \"spouses\",\n        \"stepchildren\",\n        \"stepparents\",\n        \"transparency\",\n        \"transparent\",\n        \"visit\",\n        \"visiting\",\n        \"visits\",\n        \"webpage\",\n        \"website\",\n        \"attract\",\n        \"attracting\",\n        \"attracts\",\n        \"incentive\",\n        \"incentives\",\n        \"interview\",\n        \"interviews\",\n        \"motivate\",\n        \"motivated\",\n        \"motivates\",\n        \"motivating\",\n        \"motivation\",\n        \"recruit\",\n        \"recruiting\",\n        \"recruitment\",\n        \"retain\",\n        \"retainer\",\n        \"retainers\",\n        \"retaining\",\n        \"retention\",\n        \"talent\",\n        \"talented\",\n        \"talents\",\n        \"cobc\",\n        \"ethic\",\n        \"ethical\",\n        \"ethically\",\n        \"ethics\",\n        \"honesty\",\n        \"bribery\",\n        \"corrupt\",\n        \"corruption\",\n        \"crimes\",\n        \"embezzlement\",\n        \"grassroots\",\n        \"influence\",\n        \"influences\",\n        \"influencing\",\n        \"lobbied\",\n        \"lobbies\",\n        \"lobby\",\n        \"lobbying\",\n        \"lobbyist\",\n        \"lobbyists\",\n        \"whistleblower\",\n        \"announce\",\n        \"announced\",\n        \"announcement\",\n        \"announcements\",\n        \"announces\",\n        \"announcing\",\n        \"communicate\",\n        \"communicated\",\n        \"communicates\",\n        \"communicating\",\n        \"erm\",\n        \"fairly\",\n        \"integrity\",\n        \"liaison\",\n        \"presentation\",\n        \"presentations\",\n        \"sustainable\",\n        \"asc\",\n        \"disclose\",\n        \"disclosed\",\n        \"discloses\",\n        \"disclosing\",\n        \"disclosure\",\n        \"disclosures\",\n        \"fasb\",\n        \"gaap\",\n        \"objectivity\",\n        \"press\",\n        \"sarbanes\",\n        \"engagement\",\n        \"engagements\",\n        \"feedback\",\n        \"hotline\",\n        \"investor\",\n        \"invite\",\n        \"invited\",\n        \"mail\",\n        \"mailed\",\n        \"mailing\",\n        \"mailings\",\n        \"notice\",\n        \"relations\",\n        \"stakeholder\",\n        \"stakeholders\",\n        \"compact\",\n        \"ungc\",\n      ],\n    };\n\n    const currentRef = ref.current;\n\n    fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/all`)\n      .then((response) => response.json())\n      .then((rawData) => {\n        const data = Object.entries(rawData).map(([id, value]) => {\n          let category = \"\";\n          if (categories.environmental.includes(id)) category = \"environmental\";\n          if (categories.social.includes(id)) category = \"social\";\n          if (categories.governance.includes(id)) category = \"governance\";\n          return { id, value, category }; // add category\n        });\n\n        const width = 1500; // Changed from 928\n        const height = width;\n        const margin = 1;\n        const format = d3.format(\",d\");\n\n        const tooltip = d3\n          .select(\"body\")\n          .append(\"div\")\n          .style(\"position\", \"absolute\")\n          .style(\"z-index\", \"10\")\n          .style(\"visibility\", \"hidden\")\n          .style(\"background\", \"white\")\n          .style(\"border\", \"solid\")\n          .style(\"border-width\", \"1px\")\n          .style(\"border-radius\", \"5px\")\n          .style(\"padding\", \"10px\");\n\n        const getColorScale = (category) => {\n          switch (category) {\n            case \"environmental\":\n              return d3.scaleSequential(d3.interpolateGreens);\n            case \"social\":\n              return d3.scaleSequential(d3.interpolateOranges);\n            case \"governance\":\n              return d3.scaleSequential(d3.interpolateBlues);\n            default:\n              return d3.scaleSequential(d3.interpolateBlues);\n          }\n        };\n\n        const color = (d) => {\n          let scale = getColorScale(d.data.category);\n          scale.domain([0, 1]);\n\n          return scale(Math.random());\n        };\n\n        const pack = d3\n          .pack()\n          .size([width - margin * 2, height - margin * 2])\n          .padding(3);\n\n        const hierarchyData = d3\n          .hierarchy({ children: data })\n          .sum((d) => d.value);\n\n        const root = pack(hierarchyData);\n\n        const svg = d3\n          .select(ref.current)\n          .append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n          .attr(\"viewBox\", [-margin, -margin, width, height])\n          .attr(\n            \"style\",\n            \"max-width: 100%; height: auto; font: 10px sans-serif;\"\n          )\n          .attr(\"text-anchor\", \"middle\");\n\n        const node = svg\n          .append(\"g\")\n          .selectAll(\"g\")\n          .data(root.leaves())\n          .join(\"g\")\n          .attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\n\n        node\n          .append(\"circle\")\n          .attr(\"fill-opacity\", 0.7)\n          .attr(\"fill\", color)\n          .attr(\"r\", (d) => d.r)\n          .on(\"mouseover\", function (event, d) {\n            d3.select(this)\n              .transition()\n              .duration(200)\n              .attr(\"fill-opacity\", 1)\n              .attr(\"r\", d.r * 1.35); // Increase size by 20%\n\n            tooltip\n              .style(\"visibility\", \"visible\")\n              .text(`Frequency: ${d.data.value}`)\n              .style(\"left\", `${event.pageX}px`)\n              .style(\"top\", `${event.pageY}px`);\n\n            // Add a text label for the word frequency\n            svg\n              .append(\"text\")\n              .attr(\"x\", d.x)\n              .attr(\"y\", d.y - 15)\n              .attr(\"font-size\", \"12px\")\n              .attr(\"fill\", \"#000\");\n          })\n          .on(\"mouseout\", function () {\n            d3.select(this)\n              .transition()\n              .duration(200)\n              .attr(\"fill-opacity\", 0.7)\n              .attr(\"r\", (d) => d.r); // Restore the original size\n\n            // Hide tooltip\n            tooltip.style(\"visibility\", \"hidden\");\n          });\n\n        node\n          .append(\"text\")\n          .text((d) => d.data.id)\n          .attr(\"fill\", \"#000\")\n          .style(\"font-size\", (d) => `${d.r / 3}px`);\n      });\n\n    return () => {\n      d3.select(currentRef).selectAll(\"svg\").remove();\n    };\n  }, [filepath]);\n\n  return <div ref={ref}></div>;\n};\n\nexport default BubbleChart;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicTaxonomy.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/MultiReportComparison.js",["102","103"],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SingleReportVisualisation.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":3,"column":42,"nodeType":"111","messageId":"112","endLine":3,"endColumn":46},{"ruleId":"109","severity":1,"message":"113","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":23},{"ruleId":"109","severity":1,"message":"114","line":1,"column":25,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"115","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":2,"column":28,"nodeType":"111","messageId":"112","endLine":2,"endColumn":31},{"ruleId":"109","severity":1,"message":"117","line":2,"column":33,"nodeType":"111","messageId":"112","endLine":2,"endColumn":43},{"ruleId":"109","severity":1,"message":"118","line":201,"column":13,"nodeType":"111","messageId":"112","endLine":201,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":18,"column":8,"nodeType":"121","endLine":18,"endColumn":44,"suggestions":"122"},{"ruleId":"109","severity":1,"message":"114","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"115","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":3,"column":28,"nodeType":"111","messageId":"112","endLine":3,"endColumn":31},{"ruleId":"109","severity":1,"message":"117","line":3,"column":33,"nodeType":"111","messageId":"112","endLine":3,"endColumn":43},{"ruleId":"109","severity":1,"message":"114","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"124","line":118,"column":6,"nodeType":"121","endLine":118,"endColumn":26,"suggestions":"125"},{"ruleId":"109","severity":1,"message":"126","line":520,"column":15,"nodeType":"111","messageId":"112","endLine":520,"endColumn":21},{"ruleId":"109","severity":1,"message":"127","line":178,"column":13,"nodeType":"111","messageId":"112","endLine":178,"endColumn":31},{"ruleId":"109","severity":1,"message":"128","line":186,"column":13,"nodeType":"111","messageId":"112","endLine":186,"endColumn":31},{"ruleId":"109","severity":1,"message":"129","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":21},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","'CircularProgress' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'linkExit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'tooltip'. Either include it or remove the dependency array. You can also do a functional update 'setTooltip(t => ...)' if you only need 'tooltip' in the 'setTooltip' call.",["133"],"'format' is assigned a value but never used.","'responseWordcloud1' is assigned a value but never used.","'responseWordcloud2' is assigned a value but never used.","'TopicTaxonomy' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [selectedSectors, selectedExchanges, search]",{"range":"138","text":"139"},"Update the dependencies array to be: [filepath, category, tooltip]",{"range":"140","text":"141"},[642,678],"[selectedSectors, selectedExchanges, search]",[3433,3453],"[filepath, category, tooltip]"]