[{"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js":"1","/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js":"2","/Users/stan/Desktop/esg_demo_system/front_end/src/App.js":"3","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Contact.js":"4","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js":"5","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js":"6","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/About.js":"7","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js":"8","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js":"9","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js":"10","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js":"11","/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js":"12","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js":"13","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js":"14","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js":"15","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js":"16","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js":"17","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js":"18"},{"size":627,"mtime":1689156931817,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1689156931818,"results":"21","hashOfConfig":"20"},{"size":1809,"mtime":1689156931816,"results":"22","hashOfConfig":"20"},{"size":175,"mtime":1689156931817,"results":"23","hashOfConfig":"20"},{"size":2145,"mtime":1689414865014,"results":"24","hashOfConfig":"20"},{"size":476,"mtime":1689156931818,"results":"25","hashOfConfig":"20"},{"size":171,"mtime":1689156931817,"results":"26","hashOfConfig":"20"},{"size":162,"mtime":1689156931817,"results":"27","hashOfConfig":"20"},{"size":2224,"mtime":1689156931818,"results":"28","hashOfConfig":"20"},{"size":7910,"mtime":1689420191554,"results":"29","hashOfConfig":"20"},{"size":7613,"mtime":1689601809293,"results":"30","hashOfConfig":"20"},{"size":1873,"mtime":1689156931817,"results":"31","hashOfConfig":"20"},{"size":7512,"mtime":1689156931817,"results":"32","hashOfConfig":"20"},{"size":2099,"mtime":1689156931818,"results":"33","hashOfConfig":"20"},{"size":1290,"mtime":1689156931817,"results":"34","hashOfConfig":"20"},{"size":4398,"mtime":1689156931818,"results":"35","hashOfConfig":"20"},{"size":1366,"mtime":1687400085627,"results":"36","hashOfConfig":"20"},{"size":11751,"mtime":1689665218851,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9pr7aj",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stan/Desktop/esg_demo_system/front_end/src/index.js",[],["78","79"],"/Users/stan/Desktop/esg_demo_system/front_end/src/reportWebVitals.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/App.js",["80"],"import React from 'react';\nimport SearchPage from './pages/SearchPage';  \nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Navbar from './components/Navbar';\nimport ReportStructure from './pages/ReportStructure';\nimport TreeVisualisation from './pages/TreeVisualisation';\nimport WordFrequency from './pages/WordFrequency';\nimport SentimentAnalysis from './pages/SentimentAnalysis';\nimport SentimentVis from './pages/SentimentVis';\nimport Topics from './pages/Topics';\nimport TopicsVis from './pages/TopicsVis';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/contact\" element={<Contact />} />\n          <Route path=\"/companies\" element={<SearchPage />} /> \n          <Route path=\"/visualisations/report_structure\" element={<ReportStructure />} />\n          <Route path=\"/visualisations/report_structure/tree/:filename\" element={<TreeVisualisation />} /> \n          <Route path=\"/visualisations/word_frequency\" element={<WordFrequency />} />\n          <Route path=\"/visualisations/word_frequency/:filename\" element={<WordFrequency />} />\n          <Route path=\"/visualisations/sentiment_analysis\" element={<SentimentAnalysis />} />\n          <Route path=\"/visualisations/sentiment_analysis/:filename\" element={<SentimentVis />} />\n          <Route path=\"/visualisations/topics\" element={<Topics />} />\n          <Route path=\"/visualisations/topics/:fileName\" element={<TopicsVis/>} />\n\n          \n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Contact.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentAnalysis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TopicsVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/About.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Home.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordFrequency.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SentimentVis.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/TreeVisualisation.js",["81"],"/Users/stan/Desktop/esg_demo_system/front_end/src/components/Navbar.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/SearchPage.js",["82"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button, Alert, Accordion, Form } from 'react-bootstrap';\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport { GiCancel } from \"react-icons/gi\";\nimport '../styles/search.css';\n\nfunction SearchPage() {\n  const [companies, setCompanies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const [selectedSectors, setSelectedSectors] = useState([]);\n  const [selectedExchanges, setSelectedExchanges] = useState([]);\n\n\n  useEffect(() => {\n    search();\n    }, [selectedSectors, selectedExchanges]);\n\n    function search() {\n      const sectors = selectedSectors.join(\",\");\n      const exchanges = selectedExchanges.join(\",\");\n      // Don't make a request if no sectors and no exchanges are selected\n      if (!sectors && !exchanges && !query) {\n          return;\n      }\n      return fetch(`http://localhost:3000/search?query=${query}&sectors=${sectors}&exchanges=${exchanges}`)\n          .then(response => response.json())\n          .then(companies => {\n              if (companies.length === 0) {\n                  setNoResults(true);\n              } else {\n                  setNoResults(false);\n              }\n              setCompanies(companies);\n          });\n  }\n  \n  // Handle the form submission\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n  search();\n}\n\n  function handleSectorChange(e) {\n    const value = e.target.value;\n    setSelectedSectors(prevState => {\n        if (prevState.includes(value)) {\n            return prevState.filter(sector => sector !== value);\n        } else {\n            return [...prevState, value];\n        }\n    });\n}\n\nfunction handleExchangeChange(e) {\n        const value = e.target.value;\n        setSelectedExchanges(prevState => {\n            if (prevState.includes(value)) {\n                return prevState.filter(exchange => exchange !== value);\n            } else {\n                return [...prevState, value];\n            }\n        });\n    }\n\n  function handleClear() {\n    setQuery('');\n    setCompanies([]);\n    setNoResults(false);\n  }\n\n  return (\n    <div className='m-4'>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"filter-section\" style={{ display: 'flex', flexDirection: 'center', gap: '10px' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n            <div style={{ position: 'relative', marginRight: '10px', flex: 1 }}>\n              <input \n                name=\"search\" \n                type=\"text\" \n                placeholder=\"Search for companies...\" \n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                style={{ width: '100%', paddingRight: '30px', borderRadius: '4px' }}\n              />\n              <FaTimesCircle \n                style={{ cursor: 'pointer', position: 'absolute', top: '50%', right: '5px', transform: 'translateY(-50%)', color: isHovering ? 'black' : 'grey' }}\n                onMouseEnter={() => setIsHovering(true)}\n                onMouseLeave={() => setIsHovering(false)}\n                onClick={handleClear}\n              />\n            </div>\n            <button \n              type=\"submit\" \n              style={{ backgroundColor: '#4C8BF5', color: 'white', border: 'none', padding: '5px 20px', borderRadius: '4px', cursor: 'pointer' }}\n              onMouseEnter={(e) => e.target.style.backgroundColor = '#3C7CE5'}\n              onMouseLeave={(e) => e.target.style.backgroundColor = '#4C8BF5'}\n            >Search\n            </button>\n          </div>\n        </div>\n      </form>\n      {/* Filters Section */}\n      <Accordion defaultActiveKey=\"\" className=\"mt-3\">\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Filters</Accordion.Header>\n                    <Accordion.Body>\n                        <Form.Group controlId=\"sectors\">\n                          <span className='filter-label'>Sectors</span>\n                          <div className=\"filter-options\">\n                            {[\"Technology\", \"Healthcare\", \"Services\", \"Financial\", \"Utilities\", \"Consumer Goods\", \"Real Estate\", \"Energy\"].map(sector => (\n                            <div className='filter-option' key={sector}>\n                               <Form.Check\n                                    type=\"checkbox\"\n                                    label={sector}\n                                    value={sector}\n                                    onChange={handleSectorChange}\n                                />\n                              </div>\n                            ))}\n                          </div>\n                        </Form.Group>\n                        <Form.Group controlId=\"exchanges\">\n                          <span className='filter-label'>Exchanges</span>\n                          <div className=\"filter-options\">\n                            {/* <Form.Label>Exchanges</Form.Label> */}\n                            {[\"NYSE\", \"NASDAQ\", \"OTC\", \"TSX-V\", \"ASX\", \"LSE\", \"AMEX\", \"TSX\"].map(exchange => (\n                              <div className='filter-option' key={exchange}>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={exchange}\n                                    value={exchange}\n                                    onChange={handleExchangeChange}\n                                />\n                                </div>\n                            ))}\n                            </div>\n                        </Form.Group>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n\n      {noResults && \n        <Alert variant=\"danger\" className=\"margin-top\">\n          <GiCancel /> No companies found related to \"{query}\". Please try again with a different query.\n        </Alert>}\n\n      {/* Render the company data. */}\n      {companies.map(company => (\n        <Card key={company.id} className='mt-4'>\n          <Card.Body>\n            <Card.Title>{company.company_name} ({company.ticker})</Card.Title>\n            <Card.Text>{company.company_introduction}</Card.Text>\n            <p><strong>Sector:</strong> {company.sector}</p>\n            <p><strong>Industry:</strong> {company.industry}</p>\n            <p><strong>Exchange:</strong> {company.exchange}</p>\n            <p><strong>Location:</strong> {company.company_location}</p>\n\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"></link>\n            <p><strong>All ESG reports:</strong>\n              <a href={company.source_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view all ESG reports\">\n                  <i class=\"fas fa-external-link-alt\"></i> View Reports\n              </a>\n          </p>\n          <p><strong>Most recent ESG report:</strong>\n              <a href={company.url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"esg-link\" title=\"Click to view the most recent ESG report\">\n                  <i class=\"fas fa-file-alt\"></i> View Recent Report\n              </a>\n          </p>\n            {company.company_website && (\n              <Button variant=\"primary\" href={company.company_website} target=\"_blank\">Visit company website</Button>\n            )}\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default SearchPage;","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/Topics.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/ReportStructure.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/WordCloud.js",["83"],"import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport d3Cloud from 'd3-cloud';\n\nconst WordCloud = ({ filepath, category }) => {\n    const ref = useRef();\n    const [tooltip, setTooltip] = useState({content: \"\", visibility: false, x: 0, y: 0});\n    const tooltipRef = useRef();\n\n    useEffect(() => {\n        if (!filepath) {\n            return;\n        }\n        fetch(`http://localhost:3000/word-cloud/${btoa(filepath)}/${category}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.error) {\n                console.error(data.error);\n                return;\n            }\n\n            const words = Object.entries(data).map(([word, frequency]) => ({ word, frequency }));\n\n            var width = 1000;\n            var height = 720;\n            var colorInterpolate = getColorScale(category);\n            var color = d => colorInterpolate((d.frequency / d3.max(words, d => d.frequency)) * 0.7 + 0.35);\n\n            var fontSize = d3.scalePow().exponent(0.5).domain([0, d3.max(words, d => d.frequency)]).range([10, 100]);\n            var layout = d3Cloud().size([width, height]).words(words).padding(7).rotate(() => Math.round(Math.random()) * 90).font(\"Impact\").fontSize(d => fontSize(d.frequency)).on(\"end\", draw);\n\n            function draw(words) {\n                d3.select(ref.current).html(\"\").append(\"svg\")\n                    .attr(\"width\", layout.size()[0])\n                    .attr(\"height\", layout.size()[1])\n                    .append(\"g\")\n                    .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n                    .selectAll(\"text\")\n                    .data(words)\n                    .enter().append(\"text\")\n                    .style(\"font-size\", d => d.size + \"px\")\n                    .style(\"font-family\", \"Impact\")\n                    .style(\"fill\", color)\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"transform\", d => \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\")\n                    .text(d => d.word)\n                    .on(\"mouseover\", mouseover)\n                    .on(\"mouseout\", mouseout)\n                    .attr(\"class\", \"word\");\n            }\n\n            function darkenColor(d){\n                return d3.rgb(color(d)).darker(1);\n            }\n\n            function mouseover(event, d) {\n                const totalWords = d3.sum(words, d => d.frequency);\n                const percentage = (d.frequency / totalWords * 100).toFixed(2);\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"fill\", () => darkenColor(d))\n                    .style(\"font-size\", (d.size + 5) + \"px\");\n                setTooltip({content: `${d.word}: ${d.frequency} (${percentage}%)`, visibility: true, x: event.clientX, y: event.clientY});\n            }\n\n            function mouseout(event, d) {\n                d3.select(event.target)\n                    .transition()\n                    .duration(300)\n                    .style(\"font-size\", d.size + \"px\")\n                    .style(\"fill\", () => color(d));\n                setTooltip({...tooltip, visibility: false});\n            }\n\n            layout.start();\n        });\n    }, [filepath, category]);\n\n    const getColorScale = (category) => {\n        switch (category) {\n            case \"environmental\":\n                return d3.interpolateGreens;\n            case \"social\":\n                return d3.interpolateOranges;\n            case \"governance\":\n                return d3.interpolateBlues;\n            default:\n                return d3.interpolateBlues;\n        }\n    };\n    \n    return (\n        <div>\n            <div ref={ref}></div>\n            {tooltip.visibility && \n                <div ref={tooltipRef} style={{\n                    position: \"absolute\",\n                    left: tooltip.x,\n                    top: tooltip.y,\n                    background: \"rgba(0, 0, 0, 0.7)\",\n                    color: \"#fff\",\n                    padding: \"3px 8px\",\n                    borderRadius: \"4px\",\n                    pointerEvents: \"none\",\n                    fontSize: \"14px\",\n                    transform: 'translate(-50%, -100%)'\n                }}>{tooltip.content}</div>\n            }\n        </div>\n    );\n};\n\nexport default WordCloud;\n","/Users/stan/Desktop/esg_demo_system/front_end/src/pages/CustomDropdown.js",[],"/Users/stan/Desktop/esg_demo_system/front_end/src/pages/BubbleChart.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":42,"nodeType":"91","messageId":"92","endLine":3,"endColumn":46},{"ruleId":"89","severity":1,"message":"93","line":159,"column":13,"nodeType":"91","messageId":"92","endLine":159,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":18,"column":8,"nodeType":"96","endLine":18,"endColumn":44,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":78,"column":8,"nodeType":"96","endLine":78,"endColumn":28,"suggestions":"99"},{"ruleId":"89","severity":1,"message":"100","line":97,"column":19,"nodeType":"91","messageId":"92","endLine":97,"endColumn":25},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'linkExit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'tooltip'. Either include it or remove the dependency array. You can also do a functional update 'setTooltip(t => ...)' if you only need 'tooltip' in the 'setTooltip' call.",["104"],"'format' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [selectedSectors, selectedExchanges, search]",{"range":"109","text":"110"},"Update the dependencies array to be: [filepath, category, tooltip]",{"range":"111","text":"112"},[642,678],"[selectedSectors, selectedExchanges, search]",[3315,3335],"[filepath, category, tooltip]"]